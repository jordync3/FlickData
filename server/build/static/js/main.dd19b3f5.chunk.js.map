{"version":3,"sources":["components/Dashboards/dashSearcher.js","components/Dashboards/dashboardCards.js","components/Dashboards/notificationCards.js","store/actions/AuthActions.js","components/Dashboards/notificationBell.js","containers/Dashboards/Dashboards.js","store/actions/DashboardActions.js","containers/Sidebar/Sidebar.js","store/actions/SidebarActions.js","components/CustomerAudit/dailyReportTable.js","components/CustomerAudit/dateTypeSelector.js","components/CustomerAudit/dailyReportBarchart.js","containers/CustomerAudit/CustomerAudit.js","containers/TestContainer/TestContainer.js","components/AnimalProfile/dateTypeSelector.js","components/AnimalProfile/animalSelect.js","components/AnimalProfile/APNotesTable.js","components/AnimalProfile/APEventsTable.js","components/AnimalProfile/APBarchart.js","containers/AnimalProfile/AnimalProfile.js","containers/CubeJs/graphql/client.js","containers/CubeJs/components/Header.js","containers/CubeJs/components/ChartRenderer.js","containers/CubeJs/components/QueryBuilder/ButtonDropdown.js","containers/CubeJs/components/QueryBuilder/MemberDropdown.js","containers/CubeJs/components/QueryBuilder/RemoveButtonGroup.js","containers/CubeJs/components/QueryBuilder/MemberGroup.js","containers/CubeJs/components/QueryBuilder/FilterInput.js","containers/CubeJs/components/QueryBuilder/FilterGroup.js","containers/CubeJs/components/QueryBuilder/TimeGroup.js","containers/CubeJs/components/QueryBuilder/SelectChartType.js","containers/CubeJs/components/QueryBuilder/Order/DraggableItem.js","containers/CubeJs/components/QueryBuilder/Order/OrderGroup.js","containers/CubeJs/components/QueryBuilder/Pivot/Item.js","containers/CubeJs/components/QueryBuilder/Pivot/DroppableArea.js","containers/CubeJs/components/QueryBuilder/Pivot/Axes.js","containers/CubeJs/components/QueryBuilder/Pivot/Options.js","containers/CubeJs/components/QueryBuilder/Pivot/Pivot.js","containers/CubeJs/components/QueryBuilder/ExploreQueryBuilder.js","containers/CubeJs/graphql/queries.js","containers/CubeJs/graphql/mutations.js","containers/CubeJs/components/TitleModal.js","containers/CubeJs/pages/ExplorePage.js","containers/CubeJs/components/Dashboard.js","containers/CubeJs/components/DashboardItem.js","containers/CubeJs/pages/DashboardPage.js","containers/CubeJs/CubeJs.js","App.js","serviceWorker.js","store/reducers/exampleReducer.js","store/reducers/customerAuditReducer.js","store/reducers/authReducer.js","store/reducers/dashboardReducer.js","store/reducers/animalProfileReducer.js","store/reducers/rootReducer.js","index.js","containers/Dashboards sync /^/.*/.PNG$","containers/Dashboards/animalprofile.PNG","containers/Dashboards/cubejs.PNG","containers/Dashboards/shelterluv.PNG"],"names":["DashSearcher","props","onChange","value","setState","getDashboards","groups","state","onSelect","bind","one","two","className","style","width","this","filterOption","inputValue","option","testq","placeholder","allowClear","Component","connect","dispatch","Meta","Card","dashboardCards","image","console","log","dashboard","require","error","to","hoverable","background","cover","backgroundImage","title","description","fontStyle","minHeight","notificationCards","message","notifications","showIcon","type","action","size","closable","onClose","user","uid","appLog","axios","post","then","res","data","NotificationBell","showDrawer","visible","toggleDrawer","prevState","onNotificationClose","notificationCount","closeNotification","length","getNotifications","acceptedDashboards","prevProps","snapshot","i","push","placement","bodyStyle","padding","getContainer","position","mask","onClick","dismissAllNotifications","float","marginLeft","paddingTop","paddingRight","count","BellOutlined","Dashboards","dashboards","auth","setNotifications","span","margin","Item","paddingLeft","paddingBottom","marginTop","marginRight","fontSize","overflowY","height","authGroups","query","acceptedDashbords","Sider","Layout","Sidebar","onCollapse","collapsed","e","tab","changeTab","menu","logout","key","collapsible","collapsedWidth","overlay","CaretDownOutlined","account","name","CaretUpOutlined","theme","defaultSelectedKeys","window","location","pathname","substring","mode","LayoutOutlined","textAlign","changeTabOnStart","DailyReportTable","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","ref","node","searchInput","target","onPressEnter","handleSearch","marginBottom","display","icon","handleReset","filterIcon","filtered","SearchOutlined","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","setTimeout","select","render","text","searchedColumn","highlightStyle","backgroundColor","searchWords","searchText","autoEscape","textToHighlight","rowId","columns","sorter","compare","a","b","moment","unix","multiple","Name","localeCompare","Species","Breed","Age","Sex","Status","OutcomeType","OUTCOME","dataSource","pagination","pageSize","loading","RangePicker","DatePicker","Select","Option","PickerWithType","defaultValue","dates","format","customeraudit","onDateChange","useEffect","top","right","left","bottom","strokeDasharray","dataKey","stackId","fill","CustomerAudit","changes","showLoadingModal","loadingModal","handleLoadingOk","handleLoadingCancel","downloadSIS","dailyReportTable","SISWS","XLSX","utils","json_to_sheet","wb","book_new","book_append_sheet","writeFile","bookType","bookSST","compression","add","handleFilterApply","ms","Promise","resolve","sleep","apply","handleApplyFilter","val","num","num_parts","split","replace","join","input","arr","obj","tileData","getItems","onChangeType","disabled","onOk","onCancel","footer","href","SettingOutlined","FileAddOutlined","loadingCheck","faDog","Intake","faCat","Outcome","faHome","Foster","dailyReportBarChart","TestContainer","exampleData","Col","Row","src","alt","exampleReducer","animalprofile","timer","useRef","isMounted","useState","setValue","current","clearTimeout","APEventsTable","NoteNumber","Note","APNotesTable","Type","Owner","AnimalProfile","pivotNotes","apNotesObj","apNotes","showModal","mVisible","handleClose","handleCancel","cardSelect","q","activeID","InternalID","animalSelected","v","ApplicationCards","apAnimals","result","filter","o","some","f","FilteredAnimals","createCards","appCardArr","id","apAnimalselected","Photos0","objectFit","carousel","dots","infinite","speed","slidesToShow","slidesToScroll","lineheight","apEvents","cache","InMemoryCache","defaultDashboardItems","getDashboardItems","JSON","parse","localStorage","getItem","setDashboardItems","items","setItem","stringify","nextId","currentId","parseInt","toApolloItem","__typename","schema","makeExecutableSchema","typeDefs","resolvers","Query","dashboardItems","map","dashboardItem","_","find","Mutation","createDashboardItem","item","layout","updateDashboardItem","Object","keys","k","reduce","index","findIndex","deleteDashboardItem","splice","removedItem","ApolloClient","link","SchemaLink","withRouter","Header","lineHeight","pageSelected","changePage","setItemId","CartesianChart","resultSet","children","ChartComponent","chartPivot","colors","TypeToChartComponent","line","LineChart","seriesNames","series","stroke","bar","BarChart","area","AreaChart","pie","isAnimationActive","nameKey","number","justify","align","s","totalRow","table","pivotConfig","overflow","tableColumns","tablePivot","TypeToMemoChartComponent","React","memo","ChartRenderer","vizState","chartType","component","renderProps","useCubeQuery","defaultProps","cubejsApi","OverlayVisible","handleMenuClick","handleVisibleChange","flag","overlayStyle","trigger","onVisibleChange","PropTypes","isRequired","memberMenu","availableMembers","ItemGroup","showSearch","indexOf","m","MemberDropdown","buttonProps","RemoveButtonGroup","onRemoveClick","Group","ghost","MemberGroup","members","addMemberName","updateMethods","remove","updateWith","update","FilterInputs","string","values","propTypes","FilterInput","member","Filter","dimension","FilterGroup","textOverflow","operator","operators","DateRanges","TimeGroup","dateRange","granularity","granularities","g","ChartTypes","SelectChartType","updateChartType","foundChartType","t","orderOptions","DraggableItem","order","onOrderChange","draggableId","draggableProps","dragHandleProps","innerRef","flexWrap","justifyContent","alignItems","DragOutlined","Text","ellipsis","minWidth","getNextOrder","toUpperCase","OrderGroup","orderMembers","onReorder","onDragEnd","source","destination","droppableId","provided","droppableProps","maxWidth","DroppableArea","axis","strong","Axes","onMove","uiPivotConfig","setUIPivotConfig","sourceIndex","destinationIndex","sourceAxis","destinationAxis","callback","updatedPivotConfig","Options","onUpdate","checked","fillMissingDates","Pivot","TabPane","ExploreQueryBuilder","setVizState","chartExtra","wrapWithQueryRenderer","validatedQuery","isQueryPresent","measures","availableMeasures","updateMeasures","dimensions","availableDimensions","updateDimensions","segments","availableSegments","updateSegments","filters","updateFilters","timeDimensions","availableTimeDimensions","updateTimeDimensions","updateOrder","updatePivotConfig","gutter","concat","content","reorder","set","SortAscendingOutlined","moveItem","BorderInnerOutlined","extra","GET_DASHBOARD_ITEMS","gql","GET_DASHBOARD_ITEM","CREATE_DASHBOARD_ITEM","UPDATE_DASHBOARD_ITEM","DELETE_DASHBOARD_ITEM","TitleModal","history","itemId","titleModalVisible","setTitleModalVisible","setAddingToDashboard","finalVizState","setTitle","finalTitle","useMutation","refetchQueries","addDashboardItem","variables","match","addingToDashboard","useQuery","skip","ReactGridLayout","WidthProvider","RGL","Dashboard","cols","rowHeight","onLayoutChange","newLayout","forEach","l","toUpdate","x","y","w","h","DashboardItemDropdown","removeDashboardItem","dashboardItemDropdownMenu","Modal","okText","okType","cancelText","shape","DashboardItem","deserializeItem","DashboardPage","Empty","data-grid","minW","minH","cubejs","apiUrl","CubeJs","ApolloProvider","client","Content","App","test","atEnter","opacity","atLeave","atActive","exact","path","Boolean","hostname","initState","exampleUser","assign","applyFilter","customerAuditReducer","acceptedGroups","isTeams","pop","authReducer","dashboardReducer","animalProfileReducer","appReducer","combineReducers","rootReducer","store","createStore","applyMiddleware","ReduxThunk","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","webpackContext","req","webpackContextResolve","__webpack_require__","Error","code","module","exports"],"mappings":"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","file":"static/js/main.dd19b3f5.chunk.js","sourcesContent":["import { AutoComplete } from 'antd';\nimport React, {Component} from 'react';\nimport { connect } from 'react-redux'\n\n\n\n\n\nclass DashSearcher extends Component {\n\n\n  constructor(props){\n      super(props)\n\n      this.state = {\n        value:props.value\n      }\n\n      this.onSelect = this.onSelect.bind(this)\n     \n  }\n\n\n\n  // onSearch = searchText => {\n  //   this.setState({\n  //     dataSource: !searchText ? [] : [searchText, searchText.repeat(2), searchText.repeat(3)],\n  //   });\n  // };\n  \n\n  onChange = value => {\n    this.setState({ value });\n    this.props.getDashboards(this.props.groups, value)\n  };\n\n  onSelect(value) {\n    \n  }\n  testq(one, two){\n\n  }\n\n\n  render() {\n\n    \n    return (\n      <div>\n        <AutoComplete\n         className = {'mobile-friendly-cards'}\n          style={{ width: 300 }}\n          onSelect={this.onSelect}\n          onChange={this.onChange}\n          value={this.state.value}\n          filterOption={(inputValue, option) =>\n            this.testq(inputValue, option)\n            // option.props.children.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\n          }\n          placeholder=\"\"\n          allowClear= {true}\n          \n        />\n      </div>\n    );\n  }\n\n\n\n\n}\n\nconst mapStateToProps = (state) => {\n  return{\n      \n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n      return{\n        \n      }\n  }\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DashSearcher)","import React from 'react'\nimport {  Card } from 'antd';\nimport { Link } from 'react-router-dom';\nconst { Meta } = Card;\n\n\n\n\n\nconst dashboardCards = (props) => {\n\n    var image\n\n    console.log(props.dashboard)\n\n    try {\n        image = require('../../containers/Dashboards/'+props.dashboard+'.PNG')\n    } catch (error) {\n        console.log(error)\n    }\n    \n    \n\n    return (\n\n        <Link to={\"/\"+props.dashboard+\"\"} >\n            <Card\n            className = 'dashboard-card mobile-friendly-cards'\n            hoverable\n            style={{ width: 290, background:\"whitesmoke\"}}\n            cover={<div style = {{ backgroundImage: `url(${image})`}} className = \"title-card\"> </div>}\n            >\n            <Meta className = \"title-meta\" title={props.title} description={<div style = {{fontStyle: 'italic', minHeight:90}}>{props.description}</div>} ></Meta>\n        </Card> \n        </Link>\n\n    )\n     \n    }\n    \n    export default dashboardCards","import React from 'react'\nimport {  Card } from 'antd';\nimport { Link } from 'react-router-dom';\n\nimport { Button, notification, Alert } from 'antd';\n\nconst { Meta } = Card;\n\nconst openNotification = () => {\n  const args = {\n    message: 'Notification Title',\n    description:\n      'I will never close automatically. This is a purposely very very long description that has many many characters and words.',\n    duration: 0,\n  };\n  notification.open(args);\n};\n\n\n\n\nconst notificationCards = (props) => {\n\n\n    return (\n\n        // <Link to={\"/\"+props.dashboard+\"\"} onClick={() => props.appLog(authProvider.account.userName, props.dashboard)}>\n           <Alert\n                message={props.notifications.title}\n                showIcon\n                description={props.notifications.description}\n                type={props.notifications.type}\n                style ={{minHeight:110}}\n                action={ props.notifications.dashboard != 'csr' ?\n                    <Link to={\"/\"+props.notifications.dashboard+\"\"} >\n                        <Button size=\"small\" type=\"text\" >\n                        Details\n                        </Button>\n                    </Link> : ''\n                }\n                closable\n                onClose = {() => props.onClose(props.user, props.notifications.uid)}\n                />\n        // {/* </Link> */}\n\n    )\n     \n    }\n    \n    export default notificationCards","import axios from 'axios'\n\n\n\nexport const authenticateUser = (value) => {\n  return (dispatch) => {\n\n      dispatch({\n          type: 'AUTH_USER',\n          data: value\n    })\n  }\n}\n\n\nexport const getAcceptedGroups = () => {\n  return (dispatch) => {\n\n    axios.post('/dashboards/getAcceptedGroups', {\n      \n    }).then(res => {\n\n      console.log(res.data)\n\n        dispatch({\n            type: 'GET_ACCEPTED_GROUPS',\n            data: res.data\n        })\n    })\n  }\n}\n\nexport const appLog = (user,type) => {\n\n  return (dispatch) => {\n\n     \n    axios.post('/dashboards/appLog', {\n      user:user,\n      type:type\n    }).then(res => {\n\n        \n        dispatch({\n            type: 'APP_LOG',\n            data: user\n        })\n    })\n  }\n}\n\n\n\n\n\n\n    \n","import { Drawer ,Badge, Button, Space} from 'antd';\nimport React, {Component} from 'react';\nimport { connect } from 'react-redux'\nimport { getNotifications, closeNotification, setNotifications, dismissAllNotifications } from '../../store/actions/DashboardActions.js'\nimport NotificationCards from '../../components/Dashboards/notificationCards.js';\nimport { BellOutlined } from '@ant-design/icons';\nimport { appLog } from '../../store/actions/AuthActions.js';\n\n\nclass NotificationBell extends Component {\n\n  constructor(props){\n    super(props)\n\n    this.state = {\n      visible: false,\n      notificationCount: this.props.notifications.length\n\n    }\n\n\n}\n\n\ncomponentDidMount(){\n  this.props.getNotifications(this.props.user, this.props.acceptedDashboards)\n\n}\n\ncomponentDidUpdate(prevProps, prevState, snapshot){\n  if (prevProps.notifications !== this.props.notifications) {\n    this.setState({ notificationCount: this.props.notifications.length });\n  }\n  if (prevProps.acceptedDashboards !== this.props.acceptedDashboards) {\n    this.props.getNotifications(this.props.user, this.props.acceptedDashboards)\n  }\n}\n\nshowDrawer = () => {\n  this.setState({\n  visible: true,\n  });\n};\n\ntoggleDrawer = () => {\n    this.setState(prevState => ({\n    visible: !prevState.visible\n    }));\n}\n\nonClose = () => {\n    this.setState({\n    visible: false,\n    });\n};\n\nonNotificationClose = (user,uid) => {\n\n  this.setState({ notificationCount: this.state.notificationCount-1 });\n\n  this.props.closeNotification(user,uid);\n}\n\n\n\n\n\n  render() {\n\n    var notifications = []\n\n    for(var i in this.props.notifications){\n      notifications.push(<NotificationCards  appLog = {this.props.appLog} notifications = {this.props.notifications[i]} user = {this.props.user} onClose = {this.onNotificationClose}/>)\n    }\n\n\n    return (\n      <div>\n\n\n      <Drawer\n      title=\"Notifications\"\n      placement=\"right\"\n      closable={true}\n      bodyStyle = {{padding:'0 0 0 0'}}\n      onClose={this.onClose}\n      visible={this.state.visible}\n      width= {400}\n      getContainer={false}\n      style={{ position: 'fixed' }}\n      mask={false}\n      // extra={\n      //   <Space>\n      //     <Button onClick={this.props.dismissAllNotifications(this.props.user, this.props.acceptedDashboards)}>Cancel</Button>\n      //   </Space> \n      // }\n      >\n          <Button style = {{width:'100%'}} onClick = {()=> {this.props.dismissAllNotifications(this.props.user, this.props.acceptedDashboards)}}>Dismiss All Notifications</Button>\n      {notifications}\n      </Drawer>\n        <div style = {{float:'right', marginLeft:10, paddingTop:3, paddingRight:12}}>\n          <Badge count={this.state.notificationCount}>\n              <BellOutlined className = 'settingsIcon' style = {{float:'right'}} size='large' onClick={this.toggleDrawer} />\n          </Badge>\n        </div>\n        </div>\n    \n    )\n    \n    \n  }\n\n\n}\n\nconst mapStateToProps = (state) => {\n  return{\n    notifications: state.dashboards.notifications,\n    user:state.auth.user,\n    acceptedDashboards: state.dashboards.acceptedDashboards,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n      return{\n        getNotifications: (user, acceptedDashboards) => dispatch(getNotifications(user, acceptedDashboards)),\n        closeNotification: (user, uid) => dispatch(closeNotification(user, uid)),\n        setNotifications: (data) => dispatch(setNotifications(data)),\n        dismissAllNotifications: (user, acceptedDashboards) => dispatch(dismissAllNotifications(user, acceptedDashboards)),\n        appLog: (user,type) => dispatch(appLog(user,type)),\n      }\n  }\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NotificationBell)","import React, {Component} from 'react';\nimport { connect } from 'react-redux'\nimport { Breadcrumb, Drawer } from 'antd';\nimport DashSearcher from '../../components/Dashboards/dashSearcher.js'\nimport { Row, Col, Badge } from 'antd';\nimport \"./Dashboards.css\";\nimport { getDashboards, getNotifications, closeNotification, setNotifications } from '../../store/actions/DashboardActions.js'\nimport DashboardCards from '../../components/Dashboards/dashboardCards.js';\nimport NotificationCards from '../../components/Dashboards/notificationCards.js';\nimport { appLog } from '../../store/actions/AuthActions.js';\nimport { SettingOutlined, FileAddOutlined, BellOutlined } from '@ant-design/icons';\nimport NotificationBell from '../../components/Dashboards/notificationBell.js';\n\n\n\nclass Dashboards extends Component {\n\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n          visible: false,\n        }\n\n\n    }\n\n\n    componentDidMount(){\n      this.props.getDashboards()\n\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot){\n    }\n\n    // showDrawer = () => {\n    //   this.setState({\n    //   visible: true,\n    //   });\n    // };\n    \n    // toggleDrawer = () => {\n    //     this.setState(prevState => ({\n    //     visible: !prevState.visible\n    //     }));\n    // }\n    \n    // onClose = () => {\n    //     this.setState({\n    //     visible: false,\n    //     });\n    // };\n    \n    // onNotificationClose = (user,uid) => {\n\n    //   this.setState({ notificationCount: this.state.notificationCount-1 });\n\n    //   this.props.closeNotification(user,uid);\n    // }\n\n\n\n\n\n    render(){\n\n\n      var dashboards = []\n\n      for(var i in this.props.dashboards){\n          dashboards.push(<DashboardCards dashboard = {this.props.dashboards[i].dashboard} title ={this.props.dashboards[i].title} description = {this.props.dashboards[i].description } appLog = {this.props.appLog}/>)\n      }\n\n      \n        return (\n            <div>\n\n                {/* <Drawer\n                title=\"Notifications\"\n                placement=\"right\"\n                closable={true}\n                bodyStyle = {{padding:'0 0 0 0'}}\n                onClose={this.onClose}\n                visible={this.state.visible}\n                width= {400}\n                getContainer={false}\n                style={{ position: 'fixed' }}\n                mask={false}\n                >\n                {notifications}\n                </Drawer> */}\n\n\n               <Col span = {24}>\n                {/* <NotificationBell/> */}\n               \n                <Breadcrumb style={{ margin: \"12px 0\" }}>\n                  <Breadcrumb.Item>Dashboards</Breadcrumb.Item>\n                </Breadcrumb>\n                </Col>\n                <Row>\n                  <Col span= {24}>\n                    <div className = 'mobile-friendly' style={{ paddingTop:15, paddingLeft:35 , paddingBottom:20,  background:\"#fff\"}}>\n                      <div style = {{float:\"left\", marginTop:5, marginRight:15, fontSize:16}}>\n                        Search Dashboards: </div>\n                        <DashSearcher  groups={this.props.groups} getDashboards= {this.props.getDashboards}/>\n                      </div>\n                    \n                  </Col>\n                </Row>\n                <div style={{ overflowY:\"auto\",paddingLeft:15, paddingRight:15, marginTop:0 ,height:775,  background:\"#fff\"}}>\n                  <Row>\n                    {dashboards}\n\n                    {/* <Link to=\"/drugSearch\">\n                        <Card\n                        className = 'dashboard-card'\n                          hoverable\n                          style={{ width: 290, background:\"whitesmoke\"}}\n                          cover={<div className = \"title-card\"> </div>}\n                        >\n                          <Meta className = \"title-meta\" title=\"Drug Search\" description=\"Search by Drug\" ></Meta>\n                      </Card> \n                    </Link>\n                    <Link to=\"/manufacturerSearch\">\n                        <Card\n                        className = 'dashboard-card'\n                          hoverable\n                          style={{ width: 290, background:\"whitesmoke\"}}\n                          cover={<div className = \"title-card\"> </div>}\n                        >\n                          <Meta className = \"title-meta\" title=\"Manufacturer Search\" description=\"Search by Manufacturer\" ></Meta>\n                      </Card> \n                    </Link> */}\n                  </Row>\n                  </div>\n            </div>\n\n    \n        )\n\n    }\n\n\n}\n\nconst mapStateToProps = (state) => {\n    return{\n        groups:state.auth.authGroups,\n        user:state.auth.user,\n        dashboards:state.dashboards.dashboards,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n        return{\n            getDashboards: (groups,query) => dispatch(getDashboards(groups, query)),\n            appLog: (user,type) => dispatch(appLog(user,type)),\n        }\n    }\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboards)                    ","import axios from 'axios'\n\n\nexport const getDashboards = (groups, query) => {\n  return (dispatch) => {\n\n\n    axios.post('/dashboards/getDashboards', {\n      groups:groups,\n      query:query\n    }).then(res => {\n\n      var acceptedDashbords = []\n\n\n      for(var i in res.data){ // creates a list of the accepted dashboards and then only allows the routes to be accessed if in array\n        acceptedDashbords.push(res.data[i].dashboard)\n      }\n         \n\n        dispatch({\n            type: 'GET_DASHBOARDS',\n            data: [res.data, acceptedDashbords]\n        })\n    })\n  }\n}\n\nexport const getNotifications = (user, acceptedDashboards) => {\n  return (dispatch) => {\n\n    axios.post('/dashboards/getNotifications', {\n      user:user,\n      acceptedDashboards:acceptedDashboards\n    }).then(res => {\n\n        dispatch({\n            type: 'GET_NOTIFICATIONS',\n            data: res.data\n        })\n    })\n  }\n}\n\nexport const dismissAllNotifications = (user, acceptedDashboards) => {\n  return (dispatch) => {\n\n    axios.post('/dashboards/dismissAllNotifications', {\n      user:user,\n      acceptedDashboards:acceptedDashboards\n    }).then(res => {\n\n        dispatch({\n            type: 'DISMISS_ALL_NOTIFICATIONS',\n            data: res.data\n        })\n    })\n  }\n}\n\n\n\nexport const closeNotification = (user, uid) => {\n  return (dispatch) => {\n\n    axios.post('/dashboards/closeNotification', {\n      user:user,\n      uid:uid\n    }).then(res => {\n\n        dispatch({\n            type: 'CLOSE_NOTIFICATION',\n            data: 'Closed!'\n        })\n    })\n  }\n}\n\nexport const setNotifications = (data) => {\n  return (dispatch) => {\n\n        dispatch({\n            type: 'SET_NOTIFICATIONS',\n            data: data\n        })\n  }\n}\n\n\n\n// export const getExampleName = (name) => {\n//   return (dispatch) => {\n\n//       dispatch({\n//           type: 'UPDATE_EXAMPLE_NAME',\n//           data: name\n//     })\n//   }\n// }\n\n\n\n\n\n\n    \n","import React, {Component} from 'react'\nimport { connect } from 'react-redux'\nimport './Sidebar.css'\nimport { changeTab,changeTabOnStart  } from '../../store/actions/SidebarActions.js'\nimport {  Dropdown, } from 'antd';\nimport { Link } from 'react-router-dom'\nimport { Layout, Menu } from 'antd';\nimport { CaretUpOutlined, CaretDownOutlined, TeamOutlined, LayoutOutlined } from '@ant-design/icons';\n\n\n\nconst { Sider } = Layout;\n\n\nclass Sidebar extends Component {\n\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n            collapsed: true,\n        }\n\n\n    }\n\n\n    componentDidMount(){\n\n        \n    }\n\n\n    changeTab(e, tab){\n        this.props.changeTab(tab)\n\n    }\n\n    \n    onCollapse = collapsed => {\n        this.setState({ collapsed });\n      };\n\n\n\n    render(){\n\n        const menu = (\n            <Menu >\n              <Menu.Item onClick = {this.props.logout} key=\"1\">Logout</Menu.Item>\n            </Menu>\n          );\n\n        return (\n\n            <Sider\n                collapsible\n                collapsed={this.state.collapsed}\n                onCollapse={this.onCollapse}\n                className = 'sidebar-main mobile-friendly-none'\n                collapsedWidth = '70px'\n                width ='175px'\n            >   \n                <div className=\"logo\" >\n                <div className = 'sidebar-circle'>\n                \n                </div>\n                <div className = 'sidebar-user'>\n\n                <Dropdown overlay={menu}>\n                <div className=\"ant-dropdown-link sidebarMenu\" >\n                    { !this.state.collapsed ? <div>{this.props.user.account.name} <CaretUpOutlined /> </div> : <CaretDownOutlined /> } \n                </div>\n                </Dropdown>\n                </div>\n                </div>\n                <Menu theme=\"dark\" defaultSelectedKeys={[window.location.pathname.substring(1) ? window.location.pathname.substring(1) : \"Dashboards\"]} mode=\"inline\" className ='sidebar-item' >\n                <Menu.Item key=\"Dashboards\" className = 'sidebar-item-inner'>\n                    <Link to=\"/\">\n                    <LayoutOutlined style={{marginLeft:26}} />    \n                    <span style ={{textAlign:'center'}}>Dashboards</span>\n                    </Link>\n\n                </Menu.Item>\n                {/* <Menu.Item key=\"drugSearch\" >\n                    <Link to=\"/drugSearch\">\n                    <Icon type=\"pie-chart\" />\n                    <span>Drug Search</span>\n                    </Link>\n                    \n                </Menu.Item>\n                <Menu.Item key=\"manufacturerSearch\">\n                    <Link to=\"/manufacturerSearch\">\n                    <Icon type=\"desktop\" />\n                    <span>Manufacturer Search</span>\n                    </Link>\n                </Menu.Item> */}\n                </Menu>\n            </Sider>\n\n            \n    \n        )\n\n    }\n\n\n}\n\nconst mapStateToProps = (state) => {\n    return{\n        // currentTab: state.sidebar.currentTab,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n        return{\n            changeTab: (data) => dispatch(changeTab(data)),\n            changeTabOnStart: (data) => dispatch(changeTabOnStart(data)),\n        }\n    }\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar)","\n\nexport const changeTab = (tab) => {\n  return (dispatch) => {\n\n      dispatch({\n          type: 'CHANGE_TAB',\n          data: tab\n    })\n  }\n}\n\n\nexport const changeTabOnStart = (tab) => {\n  return (dispatch) => {\n\n      dispatch({\n          type: 'CHANGE_TAB',\n          data: tab\n    })\n  }\n}\n\n\n\n\n\n\n\n    \n","import { Table, Input, Button, Tooltip} from 'antd';\nimport React, {Component} from 'react';\nimport Highlighter from 'react-highlight-words';\nimport { connect } from 'react-redux'\nimport moment from 'moment';\nimport Icon, { PlusCircleOutlined ,SearchOutlined, HistoryOutlined, FileSyncOutlined } from '@ant-design/icons'\n\n\nclass DailyReportTable extends Component {\n\n\n  constructor(props){\n      super(props)\n\n      this.state = {\n        searchText: '',\n        searchedColumn: '',\n        rowId:'',\n      }\n\n\n  }\n\n  \n    componentDidUpdate(prevProps, prevState, snapshot){\n\n  }\n\n\n\n\n\n\n  getColumnSearchProps = dataIndex => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={node => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\n        />\n        <Button\n          type=\"primary\"\n          onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          icon=\"Search\"\n          size=\"small\"\n          style={{ width: 90, marginRight: 8 }}\n        />\n        <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n          Reset\n        </Button>\n      </div>\n    ),\n    filterIcon: filtered => (\n      <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        .toString()\n        .toLowerCase()\n        .includes(value.toLowerCase()),\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: text =>\n      this.state.searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n          searchWords={[this.state.searchText]}\n          autoEscape\n          textToHighlight={text.toString()}\n        />\n      ) : (\n        text\n      ),\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = clearFilters => {\n    clearFilters();\n    this.setState({ searchText: '' });\n  };\n\n \n\n  render() {\n\n    const columns = [\n      {\n        title: 'Date',\n        dataIndex: 'Date',\n        key: 'Date',\n        // width: '20%',\n        sorter: {\n          compare: (a, b) => moment(a['Date']).unix() - moment(b['Date']).unix(),\n          multiple: 0,\n        },\n        ...this.getColumnSearchProps('Date'),\n      },\n      {\n        title: 'Name',\n        dataIndex: 'Name',\n        key: 'Name',\n        sorter: {\n          compare: (a, b) => a.Name.localeCompare(b.Name),\n          multiple: 1,\n        },\n        ...this.getColumnSearchProps('Name'),\n      },\n      {\n        title: 'Species',\n        dataIndex: 'Species',\n        key: 'Species',\n        sorter: {\n          compare: (a, b) => a.Species.localeCompare(b.Species),\n          multiple: 2,\n        },\n        ...this.getColumnSearchProps('PRIMARYPRODUCTLINE'),\n      },\n      {\n        title: 'Primary Breed',\n        dataIndex: 'Breed',\n        key: 'Breed',\n        sorter: {\n          compare: (a, b) => a.Breed.localeCompare(b.Breed),\n          multiple: 3,\n        },\n        ...this.getColumnSearchProps('Breed'),\n      },\n      {\n        title: 'Age',\n        dataIndex: 'Age',\n        key: 'Age',\n        sorter: {\n          compare: (a, b) => a.Age - b.Age,\n          multiple: 4,\n        },\n        ...this.getColumnSearchProps('Age'),\n      },\n      {\n        title: 'Sex',\n        dataIndex: 'Sex',\n        key: 'Sex',\n        sorter: {\n          compare: (a, b) => a.Sex.localeCompare(b.Sex),\n          multiple: 5,\n        },\n        ...this.getColumnSearchProps('Sex'),\n      },\n      {\n        title: 'Outcome Type',\n        dataIndex: 'OutcomeType',\n        key: 'OutcomeType',\n        sorter: {\n          compare: (a, b) => a.Status.localeCompare(b.OutcomeType),\n          multiple: 6,\n        },\n        ...this.getColumnSearchProps('OutcomeType'),\n      },\n      {\n        title: 'Outcome',\n        dataIndex: 'Outcome',\n        key: 'Outcome',\n        sorter: {\n          compare: (a, b) => a.Status.localeCompare(b.OUTCOME),\n          multiple: 7,\n        },\n        ...this.getColumnSearchProps('Outcome'),\n      },\n    ];\n\n\n    return (\n    <div style = {{width:'100%',height:'100%'}}>\n      \n      <Table \n        columns={columns} \n        dataSource={this.props.data} \n        pagination = {{pageSize:9}} \n        // rowSelection={rowSelection}\n        height = {'100vh'} \n        loading = {this.props.loading}\n        />\n\n    </div>\n    \n    \n    )\n    \n    \n  }\n\n\n}\n\nconst mapStateToProps = (state) => {\n  return{\n\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n      return{\n      }\n  }\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DailyReportTable)","import React, { useState, useEffect } from 'react';\nimport { DatePicker, TimePicker, Select, Space,Col, Row } from 'antd';\nimport { connect } from 'react-redux';\n\nconst { RangePicker } = DatePicker;\n\nconst { Option } = Select;\n\nconst monthFormat = 'YYYY-MM-DD';\n\nfunction PickerWithType({  onChange,props }) {\n\n//   if (type === 'day')\n   return <RangePicker allowClear={false} defaultValue={[props.dates[0],props.dates[1]]} format = {monthFormat} onChange={onChange} />;\n//   return <RangePicker defaultValue={[props.dates[0][0],props.dates[0][1]]} format={monthFormat} picker={type} onChange={onChange} />;\n}\n\nconst DateTypeSelector = (props) => {\n\n  return (\n      <Row>\n\n      <PickerWithType props = {props}  onChange={value => props.onDateChange(value)} />\n      </Row>\n  \n         \n  );\n}\n\n\n\nconst mapStateToProps = (state) => {\n    return{\n        dates:state.customeraudit.dates,\n\n    }\n  }\n  \n  const mapDispatchToProps = (dispatch) => {\n        return{\n          \n        }\n    }\n  \n  \n  \n  export default connect(mapStateToProps, mapDispatchToProps)(DateTypeSelector)\n\n\n\n\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\n\r\n\r\n\r\n\r\nconst DailyReportBarChart = (props) => {\r\n\r\n\r\n    useEffect(() => {\r\n    \r\n    \r\n    }, []);\r\n  \r\n\r\n\r\n    return (\r\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n        <BarChart\r\n          width={500}\r\n          height={300}\r\n          data={props.data}\r\n          margin={{\r\n            top: 20,\r\n            right: 30,\r\n            left: 0,\r\n            bottom: 5,\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"Date\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Bar dataKey=\"Dog\" stackId=\"a\" fill=\"#9EDAD1\" />\r\n          <Bar dataKey=\"Cat\" stackId=\"a\" fill=\"#F69382\" />\r\n          <Bar dataKey=\"Rabbit\" stackId=\"a\" fill=\"#E8C1A0\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  \r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n  \r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n  \r\n    };\r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(DailyReportBarChart);  \r\n  \r\n","import React, {Component} from 'react';\nimport { connect } from 'react-redux'\nimport { Breadcrumb, Drawer, Button, Modal, DatePicker, Card, Spin } from 'antd';\nimport { Row, Col } from 'antd';\nimport \"./CustomerAudit.css\";\nimport { Link } from 'react-router-dom';\nimport { clearData, handleApplyFilter, onDateChange, getDailyReportTable,getDailyReportBarChart} from '../../store/actions/customerAuditActions.js'\nimport { SettingOutlined, FileAddOutlined } from '@ant-design/icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCat, faDog, faHome} from  '@fortawesome/free-solid-svg-icons'\nimport moment from 'moment';\nimport axios from 'axios';\nimport XLSX from 'xlsx';\nimport NotificationBell from '../../components/Dashboards/notificationBell';\nimport DailyReportTable from '../../components/CustomerAudit/dailyReportTable';\nimport DateTypeSelector from '../../components/CustomerAudit/dateTypeSelector';\nimport DailyReportBarChart from '../../components/CustomerAudit/dailyReportBarchart';\n\n\n\n\n\nclass CustomerAudit extends Component {\n\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n            visible: false,\n            dates: [moment().add('month', -1),moment().add('day', -1)],\n            changes:false,\n            loadingModal:false,\n        }\n\n        this.handleFilterApply = this.handleFilterApply.bind(this)\n        this.onDateChange = this.onDateChange.bind(this)\n\n\n    }\n\n\n    componentDidMount(){\n      // this.props.getDailyReportTable(this.props.dates)\n      // this.props.getDailyReportBarChart(this.props.dates)\n\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot){\n      // if (prevProps.dates !== this.props.dates) {\n      //   this.props.clearData()\n      //   this.props.getDailyReportTable(this.props.dates)\n      //   this.props.getDailyReportBarChart(this.props.dates)\n      // }\n\n  }\n\n  sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n  handleFilterApply(){\n    let apply  = async() =>{\n      this.setState({\n        changes: false,\n        });\n\n\n      this.props.onDateChange(this.state.dates)\n\n      await this.sleep(1000)\n\n      return 0\n    }\n\n    apply().then(() =>{\n      this.props.handleApplyFilter();\n    })\n  }\n\n\n\n  loadingCheck(val){\n      if(this.props[val]){\n          return false\n      }else{\n          return false\n        }\n\n  }\n  \n  thousands_separators(num){\n    if(num){\n      var num_parts = num.toString().split(\".\");\n      num_parts[0] = num_parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      return num_parts.join(\".\");\n    }else{\n        return 0\n    }\n  }\n\n  showDrawer = () => {\n    this.setState({\n    visible: true,\n    });\n};\n\ntoggleDrawer = () => {\n    this.setState(prevState => ({\n    visible: !prevState.visible\n    }));\n}\n\nonClose = () => {\n    this.setState({\n    visible: false,\n    });\n};\n\n\nonDateChange = (moment) => {\n\n  this.setState({\n    changes: true,\n    dates: moment,\n    });\n    \n  };\n\n  showLoadingModal = () => {\n    this.setState({\n        loadingModal: true,\n      });\n  };\n\n  handleLoadingOk = () => {\n      this.setState({\n          loadingModal: false,\n      });\n  };\n\n  handleLoadingCancel = () => {\n      this.setState({\n          loadingModal: false,\n      });\n  };\n\n  downloadSIS = () => {\n    // this.showLoadingModal()\n\n    // axios.post('/customerAudit/getSISExcel', {\n    //   dates: this.props.dates\n    //       })\n    // .then((res) =>{\n      if(this.props.dailyReportTable){\n          var SISWS =  XLSX.utils.json_to_sheet(this.props.dailyReportTable);\n          var wb = XLSX.utils.book_new();\n\n          XLSX.utils.book_append_sheet(wb, SISWS, 'Daily Report');\n\n          var wopts = {type:'buffer',bookType: 'xlsx', bookSST: true, compression:true};\n\n          XLSX.writeFile(wb, 'Daily Report.xlsx', wopts);\n      }\n    // this.handleLoadingOk()\n\n    //   })\n    }\n\n\n    getItems(input) {\n      if(input){\n      var arr = input, obj = {};\n      for (var i = 0; i < arr.length; i++) {\n        if (!obj[arr[i].OutcomeType]) {\n          obj[arr[i].OutcomeType] = 1;\n        } else if (obj[arr[i].OutcomeType]) {\n          obj[arr[i].OutcomeType] += 1;\n        }\n      }\n      return obj;\n      }else{\n          return {}\n      }\n      \n    }\n\n\n\n    render(){\n\n\n      var tileData = this.getItems(this.props.dailyReportTable)\n\n\n        return (\n            <div>\n                <Drawer\n                title=\"ShelterLuv\"\n                placement=\"right\"\n                closable={true}\n                onClose={this.onClose}\n                visible={this.state.visible}\n                width= {300}\n                getContainer={false}\n                style={{ position: 'fixed' }}\n                mask={false}\n                >\n                  <p>Select Date Range: <DateTypeSelector onDateChange={this.onDateChange} onChangeType={this.onChangeType}/></p>\n                  \n                  <Button style = {{marginTop:10, float:'left'}} type=\"primary\" disabled = {!this.state.changes} onClick = {this.handleFilterApply}>Apply Changes</Button>\n                </Drawer>\n\n                <Modal title=\"Fetching Data\" visible={this.state.loadingModal} onOk={this.handleLoadingOk} onCancel={this.handleLoadingCancel} footer = {false} style = {{marginTop:150}} width= '500px' bodyStyle= {{height:200}}>\n                  <div style = {{textAlign:'center', marginTop:50}}>\n                      <Spin />\n                  </div>\n                </Modal>\n\n            <div >\n                <Row>\n                  <Col span={12}>\n                    <Breadcrumb style={{ margin: \"12px 0 0 0\" }}>\n                      <Breadcrumb.Item><Link to =\"/\">Dashboards</Link></Breadcrumb.Item>\n                      <Breadcrumb.Item  onClick = {() =>{}}><a href='#/shelterluv' >ShetlerLuv</a></Breadcrumb.Item>\n                    </Breadcrumb>\n                  </Col>\n                  <Col span = {12} style = {{paddingRight:8, paddingTop: 15}}>\n                        <div style = {{float:'right', marginLeft:8, paddingTop:3}}>\n                            <SettingOutlined className = 'settingsIcon' style = {{float:'right'}} size='large' onClick={this.toggleDrawer} />\n                        </div>\n                        {/* <div>\n                          <NotificationBell/>\n                        </div> */}\n                        <div style = {{float:'right', marginLeft:10, paddingTop:3}}>\n                            <FileAddOutlined className = 'settingsIcon' style = {{float:'right'}} size='large' onClick={this.downloadSIS} />\n                        </div>\n                        <div style = {{float:'right', width:400}}>\n                          {/* <LAMSearcher data = {this.props.taskNames} value = {this.props.taskNameSelected} changeExtractSelected = {this.props.changeTaskNameSelected}/> */}\n                        </div>\n                  </Col>\n                </Row>\n                <Row style = {{marginTop:8}}>\n                  <Col span = {24}>\n                      <Row>\n                        <Col span = {8}>\n                          <Card style={{ height: 170, margin: \"0 12px 0 0\", padding:\"20px 0 0 0px\" }} loading ={this.loadingCheck('')}>\n                              <Row>                            \n                                <Col span = {10}>\n                                  <div className ='ca-card-icon'><FontAwesomeIcon icon={faDog} size=\"6x\" color={'#9EDAD1'} /></div>\n                                </Col>\n                                <Col span = {14}>\n                                  <h1 className = 'card-data' style = {{textAlign:\"center\", color:'#9EDAD1', paddingTop:6}}>{tileData ? tileData.Intake : 0}</h1>\n                                  <h3 className = \"card-titles\">Animals Intake</h3>\n                                </Col>\n                              </Row>\n                          </Card>\n                        </Col>\n                        <Col span = {8}>\n                          <Card style={{ height: 170, margin: \"0 12px 0 0\", padding:\"20px 0 0 0px\"   }} loading ={this.loadingCheck('')}>\n                              <Row>                            \n                                <Col span = {10}>\n                                  <div className ='ca-card-icon'><FontAwesomeIcon icon={faCat} size=\"6x\" color={'#F69382'} /></div>\n                                </Col>\n                                <Col span = {14}>\n                                  <h1 className = 'card-data' style = {{textAlign:\"center\", color:'#F69382', paddingTop:6}}>{tileData ? tileData.Outcome : 0}</h1>\n                                  <h3 className = \"card-titles\">Animals Outcome</h3>\n                                </Col>\n                              </Row>\n                          </Card>                        \n                        </Col>\n                        <Col span = {8}>\n                          <Card style={{ height: 170, margin: \"0 0 0 0\", padding:\"20px 0 0 0px\"   }} loading ={this.loadingCheck('')}>\n                                <Row>                            \n                                  <Col span = {10}>\n                                    <div className ='ca-card-icon'><FontAwesomeIcon icon={faHome} size=\"6x\" color={'#E8C1A0'} /></div>\n                                  </Col>\n                                  <Col span = {14}>\n                                    <h1 className = 'card-data' style = {{textAlign:\"center\", color:'#E8C1A0', paddingTop:6}}>{tileData ? tileData.Foster : 0}</h1>\n                                    <h3 className = \"card-titles\">Foster Status</h3>\n                                  </Col>\n                                </Row>\n                            </Card>\n                        </Col>\n                        <Col span = {9}>\n                          {/* <CustomerAuditSiloTable data = {this.props.customerAuditSiloTable} loading ={this.loadingCheck('customerAuditSiloTable')}/> */}\n                        </Col>\n                      </Row>\n                      <Row style = {{marginTop:12}}>\n                      <Col span = {24} style = {{height:200, background:'white'}}> \n                          <DailyReportBarChart data = {this.props.dailyReportBarChart}/>\n                      </Col>\n                    </Row>\n                      <Row style = {{marginTop:'16px'}}>\n                        <Col span = {24} >  \n                          <DailyReportTable data = {this.props.dailyReportTable} loading ={this.loadingCheck('dailyReportTable')}/>\n                        </Col>\n                      </Row>\n                    </Col>\n                </Row>\n                  \n                  \n\n              </div>\n            </div>\n\n    \n        )\n\n    }\n\n\n}\n\nconst mapStateToProps = (state) => {\n    return{\n      dates:state.customeraudit.dates,\n      dailyReportTable: state.customeraudit.dailyReportTable,\n      dailyReportBarChart: state.customeraudit.dailyReportBarChart\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n        return{\n            // onDateChange: (moment) => dispatch(onDateChange(moment)),\n            // clearData: (value) => dispatch(clearData(value)),\n            // handleApplyFilter: () => dispatch(handleApplyFilter()),\n            // getDailyReportTable: (dates) => dispatch(getDailyReportTable(dates)),\n            // getDailyReportBarChart: (dates) => dispatch(getDailyReportBarChart(dates)),\n        }\n    }\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomerAudit)                    ","import React, {Component} from 'react'\nimport { connect } from 'react-redux'\nimport './TestContainer.css'\nimport { Card, Col, Row, Container } from 'react-bootstrap';\nimport TestComponent from '../../components/TestComponent/TestComponent';\n// import { getExampleName, getExampleData } from '../../store/actions/ExampleActions.js'\n\n\n\nclass TestContainer extends Component {\n\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n\n        }\n\n\n    }\n\n\n    componentDidMount(){\n        // this.props.getExampleName('Jordyn')\n        // this.props.getExampleData()\n    }\n\n\n\n\n\n    render(){\n\n        console.log(this.props.exampleData)\n\n\n\n        return (\n\n            <Col span= {24}>\n                <Row>\n                    <Col span = {24}>\n                        <img src='https://www.shelterluv.com/sites/default/files/animal_pics/1224/2021/03/31/07/20210331073522.png' alt=\"Logo\" width={500} height ={500} />\n                    </Col>\n                </Row>\n            </Col>\n\n            \n    \n        )\n\n    }\n\n\n}\n\nconst mapStateToProps = (state) => {\n    return{\n        name:state.exampleReducer.name,\n        exampleData: state.exampleReducer.exampleData\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n        return{\n            // getExampleName: (name) => dispatch(getExampleName(name)),\n            // getExampleData: (name) => dispatch(getExampleData(name))\n        }\n    }\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TestContainer)","import React, { useState, useEffect } from 'react';\nimport { DatePicker, TimePicker, Select, Space,Col, Row } from 'antd';\nimport { connect } from 'react-redux';\n\nconst { RangePicker } = DatePicker;\n\nconst { Option } = Select;\n\nconst monthFormat = 'YYYY-MM-DD';\n\nfunction PickerWithType({  onChange,props }) {\n\n//   if (type === 'day')\n   return <RangePicker allowClear={false} defaultValue={[props.dates[0],props.dates[1]]} format = {monthFormat} onChange={onChange} />;\n//   return <RangePicker defaultValue={[props.dates[0][0],props.dates[0][1]]} format={monthFormat} picker={type} onChange={onChange} />;\n}\n\nconst DateTypeSelector = (props) => {\n\n  return (\n      <Row>\n\n      <PickerWithType props = {props}  onChange={value => props.onDateChange(value)} />\n      </Row>\n  \n         \n  );\n}\n\n\n\nconst mapStateToProps = (state) => {\n    return{\n        dates:state.animalprofile.dates,\n\n    }\n  }\n  \n  const mapDispatchToProps = (dispatch) => {\n        return{\n          \n        }\n    }\n  \n  \n  \n  export default connect(mapStateToProps, mapDispatchToProps)(DateTypeSelector)\n\n\n\n\n","import { Select, Row,Input } from 'antd';\r\nimport { connect } from 'react-redux'\r\nimport debounce from 'lodash/debounce';\r\nimport React, { useState, useEffect, useRef, timeout } from 'react';\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\n\r\n\r\nconst AnimalSelect = (props) => {\r\n\r\n\r\n    const timer = useRef(null)\r\n    const isMounted = useRef(false)\r\n\r\n    const [value, setValue] = useState(0);\r\n    \r\n    useEffect(() => {\r\n        if(isMounted.current){\r\n            clearTimeout(timer.current)\r\n            timer.current = setTimeout(() => {\r\n                props.handleSearch(value)\r\n            },200)\r\n        }\r\n        else{\r\n            isMounted.current = true\r\n        }\r\n            \r\n    },[value])\r\n\r\n\r\n    \r\n\r\n    return (\r\n        <Row>\r\n            <Input placeholder=\"Search Animals\" onChange={(e) => { setValue(e.target.value); }} />\r\n        </Row>\r\n    \r\n           \r\n    );\r\n  }\r\n  \r\n  \r\n  \r\n  const mapStateToProps = (state) => {\r\n      return{\r\n          dates:state.animalprofile.dates,\r\n  \r\n      }\r\n    }\r\n    \r\n    const mapDispatchToProps = (dispatch) => {\r\n          return{\r\n            \r\n          }\r\n      }\r\n    \r\n    \r\n    \r\n    export default connect(mapStateToProps, mapDispatchToProps)(AnimalSelect)\r\n  ","import { Table, Input, Button, Tooltip} from 'antd';\nimport React, {Component} from 'react';\nimport Highlighter from 'react-highlight-words';\nimport { connect } from 'react-redux'\nimport moment from 'moment';\nimport Icon, { PlusCircleOutlined ,SearchOutlined, HistoryOutlined, FileSyncOutlined } from '@ant-design/icons'\n\n\nclass APEventsTable extends Component {\n\n\n  constructor(props){\n      super(props)\n\n      this.state = {\n        searchText: '',\n        searchedColumn: '',\n        rowId:'',\n      }\n\n\n  }\n\n  \n    componentDidUpdate(prevProps, prevState, snapshot){\n\n  }\n\n\n\n\n\n\n  getColumnSearchProps = dataIndex => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={node => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\n        />\n        <Button\n          type=\"primary\"\n          onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          icon=\"Search\"\n          size=\"small\"\n          style={{ width: 90, marginRight: 8 }}\n        />\n        <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n          Reset\n        </Button>\n      </div>\n    ),\n    filterIcon: filtered => (\n      <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        .toString()\n        .toLowerCase()\n        .includes(value.toLowerCase()),\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: text =>\n      this.state.searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n          searchWords={[this.state.searchText]}\n          autoEscape\n          textToHighlight={text.toString()}\n        />\n      ) : (\n        text\n      ),\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = clearFilters => {\n    clearFilters();\n    this.setState({ searchText: '' });\n  };\n\n \n\n  render() {\n\n    const columns = [\n      {\n        title: 'Note Number',\n        dataIndex: 'NoteNumber',\n        key: 'NoteNumber',\n        sorter: {\n          compare: (a, b) => a.NoteNumber.localeCompare(b.NoteNumber),\n          multiple: 0,\n        },\n        ...this.getColumnSearchProps('NoteNumber'),\n      },\n      {\n        title: 'Note',\n        dataIndex: 'Note',\n        key: 'Note',\n        sorter: {\n          compare: (a, b) => a.Note.localeCompare(b.Note),\n          multiple: 1,\n        },\n        ...this.getColumnSearchProps('Note'),\n      },\n    ];\n\n\n    return (\n    <div style = {{width:'100%',height:'100%'}}>\n      \n      <Table \n        columns={columns} \n        dataSource={this.props.data} \n        pagination = {{pageSize:8}} \n        // rowSelection={rowSelection}\n        height = {'100vh'} \n        loading = {this.props.loading}\n        />\n\n    </div>\n    \n    \n    )\n    \n    \n  }\n\n\n}\n\nconst mapStateToProps = (state) => {\n  return{\n\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n      return{\n      }\n  }\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(APEventsTable)","import { Table, Input, Button, Tooltip} from 'antd';\nimport React, {Component} from 'react';\nimport Highlighter from 'react-highlight-words';\nimport { connect } from 'react-redux'\nimport moment from 'moment';\nimport Icon, { PlusCircleOutlined ,SearchOutlined, HistoryOutlined, FileSyncOutlined } from '@ant-design/icons'\n\n\nclass APNotesTable extends Component {\n\n\n  constructor(props){\n      super(props)\n\n      this.state = {\n        searchText: '',\n        searchedColumn: '',\n        rowId:'',\n      }\n\n\n  }\n\n  \n    componentDidUpdate(prevProps, prevState, snapshot){\n\n  }\n\n\n\n\n\n\n  getColumnSearchProps = dataIndex => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={node => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\n        />\n        <Button\n          type=\"primary\"\n          onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          icon=\"Search\"\n          size=\"small\"\n          style={{ width: 90, marginRight: 8 }}\n        />\n        <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n          Reset\n        </Button>\n      </div>\n    ),\n    filterIcon: filtered => (\n      <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        .toString()\n        .toLowerCase()\n        .includes(value.toLowerCase()),\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: text =>\n      this.state.searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n          searchWords={[this.state.searchText]}\n          autoEscape\n          textToHighlight={text.toString()}\n        />\n      ) : (\n        text\n      ),\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = clearFilters => {\n    clearFilters();\n    this.setState({ searchText: '' });\n  };\n\n \n\n  render() {\n\n    const columns = [\n      {\n        title: 'Date',\n        dataIndex: 'Date',\n        key: 'Date',\n        // width: '20%',\n        sorter: {\n          compare: (a, b) => moment(a['Date']).unix() - moment(b['Date']).unix(),\n          multiple: 0,\n        },\n        ...this.getColumnSearchProps('Date'),\n      },\n      {\n        title: 'Event',\n        dataIndex: 'Type',\n        key: 'Type',\n        sorter: {\n          compare: (a, b) => a.Type.localeCompare(b.Type),\n          multiple: 1,\n        },\n        ...this.getColumnSearchProps('Type'),\n      },\n      {\n        title: 'Owner',\n        dataIndex: 'Owner',\n        key: 'Owner',\n        sorter: {\n          compare: (a, b) => a.Owner.localeCompare(b.Owner),\n          multiple: 1,\n        },\n        ...this.getColumnSearchProps('Owner'),\n      },\n\n    ];\n\n\n    return (\n    <div style = {{width:'100%',height:'100%'}}>\n      \n      <Table \n        columns={columns} \n        dataSource={this.props.data} \n        pagination = {{pageSize:8}} \n        // rowSelection={rowSelection}\n        height = {'100vh'} \n        loading = {this.props.loading}\n        />\n\n    </div>\n    \n    \n    )\n    \n    \n  }\n\n\n}\n\nconst mapStateToProps = (state) => {\n  return{\n\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n      return{\n      }\n  }\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(APNotesTable)","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\n\r\n\r\n\r\n\r\nconst APBarchart = (props) => {\r\n\r\n\r\n    useEffect(() => {\r\n    \r\n    \r\n    }, []);\r\n  \r\n\r\n\r\n    return (\r\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n        <BarChart\r\n          width={500}\r\n          height={300}\r\n          data={props.data}\r\n          margin={{\r\n            top: 20,\r\n            right: 30,\r\n            left: 0,\r\n            bottom: 5,\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"Date\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          {/* <Legend /> */}\r\n          <Bar dataKey=\"Type\" stackId=\"a\" fill=\"#F69382\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  \r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n  \r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n  \r\n    };\r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(APBarchart);  \r\n  \r\n","import React, {Component} from 'react';\nimport { connect } from 'react-redux'\nimport { Breadcrumb, Drawer, Button, Modal, Card,Carousel, Progress } from 'antd';\nimport { Row, Col } from 'antd';\nimport \"./AnimalProfile.css\";\nimport { Link } from 'react-router-dom';\nimport { SettingOutlined, StarTwoTone } from '@ant-design/icons';\nimport moment from 'moment';\nimport DateTypeSelector from '../../components/AnimalProfile/dateTypeSelector'\nimport { getAPAnimals, getAPEvents, getAPNotes } from '../../store/actions/AnimalProfileActions.js'\nimport AnimalSelect from '../../components/AnimalProfile/animalSelect';\nimport APNotesTable from '../../components/AnimalProfile/APNotesTable';\nimport APEventsTable from '../../components/AnimalProfile/APEventsTable';\nimport APBarchart from '../../components/AnimalProfile/APBarchart';\nconst _ = require('lodash');\n\n\n\n\nclass AnimalProfile extends Component {\n\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n            visible: false,\n            dates: [moment().add('month', -1),moment()],\n            ApplicationCards:[],\n            activeID:'100',\n            FilteredAnimals:[],\n            ApplicationCards:[],\n            animalSelected:'',\n            pivotNotes:[],\n\n\n        }\n        this.handleFilterApply = this.handleFilterApply.bind(this)\n        this.onDateChange = this.onDateChange.bind(this)\n        this.handleClose = this.handleClose.bind(this)\n\n        \n\n    }\n\n\n    componentDidMount(){\n      // this.props.getAPAnimals()\n        \n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot){\n      // if (prevProps.apAnimals !== this.props.apAnimals) {\n      //   this.setState({\n      //     FilteredAnimals: this.props.apAnimals,\n      //     });\n\n      // }\n      // if (prevState.FilteredAnimals !== this.state.FilteredAnimals) {\n      //     this.createCards()\n      // }\n      // if (prevState.activeID !== this.state.activeID) {\n      //   this.props.getAPEvents(this.state.activeID)\n      //   this.props.getAPNotes(this.state.activeID)\n      //   this.createCards()\n      // }\n      // if (prevProps.apNotes !== this.props.apNotes) {\n      //   this.pivotNotes()\n\n      // }\n      } \n      \n\n    \n\n\n\n    sleep(ms) {\n      return new Promise(resolve => setTimeout(resolve, ms));\n    }\n  \n    handleFilterApply(){\n      let apply  = async() =>{\n        this.setState({\n          changes: false,\n          });\n  \n  \n        this.props.onDateChange(this.state.dates)\n  \n        await this.sleep(1000)\n  \n        return 0\n      }\n  \n      apply().then(() =>{\n        this.props.handleApplyFilter();\n      })\n    }\n\n    thousands_separators(num){\n      if(num){\n        var num_parts = num.toString().split(\".\");\n        num_parts[0] = num_parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n        return num_parts.join(\".\");\n      }else{\n          return 0\n      }\n    }\n    \nonDateChange = (moment) => {\n\n  this.setState({\n    changes: true,\n    dates: moment,\n    });\n    \n  };\n\n  pivotNotes = () => {\n\n\n\n    var apNotesObj = []\n    if(this.props.apNotes){\n      for(var i in this.props.apNotes[0]){\n        console.log(this.props.apNotes[0][i])\n      \n        apNotesObj.push({NoteNumber: i, Note:this.props.apNotes[0][i]})\n      }\n    this.setState({\n      pivotNotes:apNotesObj\n    });\n\n  }\n\n    }\n\n    \n\n    \n\n\n  loadingCheck(val){\n      if(this.props[val]){\n          return false\n      }else{\n          return true\n        }\n  }\n  \n\n\n  showDrawer = () => {\n    this.setState({\n    visible: true,\n    });\n};\n\ntoggleDrawer = () => {\n    this.setState(prevState => ({\n    visible: !prevState.visible\n    }));\n}\n\nonClose = () => {\n    this.setState({\n    visible: false,\n    });\n};\n\n\nshowModal = (type, title) => {\n  this.setState({\n  mVisible: true,\n  title:title,\n  type:type,\n  });\n};\n\nhandleClose = e => {\n  this.setState({\n  mVisible: false,\n  });\n};\n\nhandleCancel = e => {\n  this.setState({\n    mVisible: false,\n  });\n};\n\ncardSelect = (q) => {\n  console.log(q)\n  this.setState({\n    activeID: q ? q.InternalID : '',\n    animalSelected: q\n  });\n\n}\n\nhandleSearch = (v) => {\n\n  this.setState({\n    ApplicationCards:[]\n  });\n  \n  var v = v.split(',')\n\n if(this.props.apAnimals){\n\n  var result = []\n\n \n\n  for(var i in v){\n    if(v[i]){\n      if(i == 0){\n        result = (this.props.apAnimals).filter(o => o.Name.toLowerCase().includes(v[i].toLowerCase()) || o.Status.toLowerCase().includes(v[i].toLowerCase()) || o.Type.toLowerCase().includes(v[i].toLowerCase()) || o.Sex.toLowerCase().includes(v[i].toLowerCase()))\n      }else{\n        result = result.filter(e => (this.props.apAnimals).filter(o => o.Name.toLowerCase().includes(v[i].toLowerCase()) || o.Status.toLowerCase().includes(v[i].toLowerCase()) || o.Type.toLowerCase().includes(v[i].toLowerCase()) || o.Sex.toLowerCase().includes(v[i].toLowerCase())).some(f => f.InternalID == e.InternalID));\n      }\n    }\n  }\n   \n  console.log(result)\n\n   this.setState({\n    FilteredAnimals:result\n  });\n  this.createCards()\n }\n if(!v[0]){\n  this.setState({\n    FilteredAnimals:this.props.apAnimals\n  });\n  this.createCards()\n }\n}\n\ncreateCards = () => {\n  \n  var appCardArr = []\n\n  for(let i in this.state.FilteredAnimals){\n\n    appCardArr.push(\n      <div>\n        <Card id = {this.state.FilteredAnimals[i]} onClick = {(e) => {this.cardSelect(this.state.FilteredAnimals[i]);this.setState({apAnimalselected:this.props.apAnimals[i].Name});}} className = {this.state.activeID == this.state.FilteredAnimals[i].InternalID ?'ETLCardActive' : 'ETLCard'}>\n      {/* <Card id = {i} onClick = {(e) => {this.cardSwitch(e);this.next();this.setState({apAnimalselected:this.props.apAnimals[i].APPLICATIONGROUP});}} className = {this.state.activeID == i ?'ETLCard' : 'ETLCard'}> */}\n\n        {/* <h3>{this.props.apAnimals[i].APPLICATIONGROUP}</h3> */}\n        <Row>      \n          <Col span ={8} style ={{margin:'20px 0 40px 0'}}>\n          <img src= {this.state.FilteredAnimals[i].Photos0} alt=\"Logo\" style={{height:'90%', width:'100%', objectFit:'contain'}} />\n            {/* <Progress  type=\"circle\" percent={this.props.apAnimals ? Math.round(((this.props.apAnimals[i].COMPLETED/this.props.apAnimals[i].TOTAL)*100)) :0} \n              strokeColor={{\n                  '0%': '#108ee9',\n                  '100%': '#87d068',\n              }} \n            /> */}\n          </Col>\n          <Col span ={16}>\n            <Row>\n              <Col span = {24} style = {{padding:'20px 12px 0 12px'}}>\n                <h3>{this.state.FilteredAnimals[i].Name}</h3>\n                <h5>Status: {this.state.FilteredAnimals[i].Status}</h5>\n                <h5>Type: {this.state.FilteredAnimals[i].Type}</h5>\n                <h5>Sex: {this.state.FilteredAnimals[i].Sex}</h5>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </Card>\n      </div>\n      )\n\n  }\n\n  this.setState({\n    ApplicationCards:appCardArr\n  });\n\n}\n\n\n\n  render(){\n\n    console.log(this.state.activeID)\n\n\n      const props = {\n        dots: true,\n        infinite: true,\n        speed: 500,\n        slidesToShow: 1,\n        slidesToScroll: 1\n      };\n    \n\n\n        return (\n            <div>\n                <Drawer\n                title=\"Animal Profile\"\n                placement=\"right\"\n                closable={true}\n                onClose={this.onClose}\n                visible={this.state.visible}\n                width= {300}\n                getContainer={false}\n                style={{ position: 'fixed' }}\n                mask={false}\n                >\n                <p>Select Date Range: <DateTypeSelector onDateChange={this.onDateChange}/></p>\n                \n                <Button style = {{marginTop:10, float:'left'}} type=\"primary\" disabled = {!this.state.changes} onClick = {this.handleFilterApply}>Apply Changes</Button>\n                </Drawer>\n\n                <Modal\n                onCancel={this.handleCancel}\n                title={this.state.title}\n                visible={this.state.mVisible}\n                onOk={this.handleClose}\n                width={this.state.type =='Manage' ? '80%': '40%'}\n                footer={\n                    <Button key=\"close\" type=\"secondary\" onClick={this.handleClose}>\n                        Close\n                    </Button>\n                }>   \n                    {/* <AlertsTable data = {this.props.alertsTable} loading ={this.loadingCheck('alertsTable')} user = {this.props.user} updateAlerts = {this.props.updateAlerts}/> */}\n                    {/* {this.state.type =='Manage' ? <AlertsTable data = {this.props.alertsTable} loading ={this.loadingCheck('alertsTable')} user = {this.props.user} updateAlerts = {this.props.updateAlerts}/>:''}\n                    {this.state.type =='Comment' ? <ManageAlertsModal data = {this.state.commentSelected} onSend = {this.addComment} editComment = {this.editComment} UIDSubRowSelected = {this.state.UIDSubRowSelected} title = {this.state.title}/> :''} */}\n              </Modal>\n\n            <div >\n                <Row>\n                  <Col span={12}>\n                    <Breadcrumb style={{ margin: \"12px 0\" }}>\n                      <Breadcrumb.Item><Link to =\"/\">Dashboards</Link></Breadcrumb.Item>\n                      <Breadcrumb.Item  onClick = {() =>{this.cardSelect()}}><a href='#/animalprofile' >Animal Profile</a></Breadcrumb.Item>\n                      { this.state.animalSelected ? <Breadcrumb.Item>{this.state.animalSelected.Name}</Breadcrumb.Item> : null}\n                      {/* { this.props.subExtractSelected ? <Breadcrumb.Item>{this.props.subExtractSelected}</Breadcrumb.Item> : null} */}\n\n                    </Breadcrumb>\n                  </Col>\n                  <Col span = {12} style = {{paddingRight:8, paddingTop: 15}}>\n                        <div style = {{float:'right', marginLeft:10, paddingTop:3}}>\n                            <SettingOutlined className = 'settingsIcon' style = {{float:'right'}} size='large' onClick={this.toggleDrawer} />\n                        </div>\n                  </Col>\n                </Row>\n                <Row style = {{}}>\n                <Col span = {24} style = {{ height:'89vh'}}>\n                      <Row style = {{height:'100%'}}>\n                        <Col span = {5} style = {{background:'white', height:'100%'}}>\n                          <div style={{paddingRight:5, background:'#F3F2F1'}}>\n                            <AnimalSelect data = {this.props.apAnimals} handleSearch = {this.handleSearch}/>\n                          </div>\n                          \n                          {/* {this.state.ApplicationCards} */}\n                          {/* <Col span = {24} style = {{background:'#F3F2F1'}}> <Button onClick = {this.previous}>Back</Button></Col> */}\n                          <Col span = {24} className = 'ETLApplications' style = {{background:'#F3F2F1', height:'100%', overflowY:'auto'}}>\n                          <Carousel ref={node => (this.carousel = node)} {...props}  style = {{background:'#F3F2F1', height:'100%', overflowY:'auto'}} >\n                              <div className = 'ETLApplications' style = {{background:'#F3F2F1', height:'100%', overflowY:'auto'}}>\n                                <div style={{ height: '100%',\n                                  color: '#fff',\n                                  lineheight: '100%',\n                                  background: '#F3F2F1'}}>\n                                  {this.state.ApplicationCards}\n                                  <Card className = {'ETLCard'}></Card>\n                                  <Card className = {'ETLCard'}></Card>\n                                  <Card className = {'ETLCard'}></Card>\n                                  <Card className = {'ETLCard'}></Card>\n                                  <Card className = {'ETLCard'}></Card>\n                                  </div>\n                              </div>\n                              {/* <div className = 'ETLApplications' style = {{background:'#F3F2F1', height:'100%', overflowY:'auto'}}>\n                                <div style={{ height: '100%',\n                                  color: '#fff',\n                                  lineheight: '100%',\n                                  background: '#F3F2F1'}}>\n                                  {TaskCards}\n                                  <Card className = {'ETLCard'}></Card>\n                                  <Card className = {'ETLCard'}></Card>\n                                  <Card className = {'ETLCard'}></Card>\n                                  <Card className = {'ETLCard'}></Card>\n                                  <Card className = {'ETLCard'}></Card>\n                                  </div>\n                              </div> */}\n                              <div>\n                                <h3 style={{ height: '100%',\n                                  color: '#fff',\n                                  lineheight: '100%',\n                                  textAlign: 'center',\n                                  background: '#364d79'}}>1</h3>\n                              </div>\n                            </Carousel>\n                            </Col>\n                          </Col>\n                          <Col span = {19}>\n                            <Row style = {{padding:'0px 8px'}}>\n                              <Col span = {6} style = {{background:'#FFFFFF', height:250, padding:'8px'}}>\n                              { this.state.animalSelected ? <img src= {this.state.animalSelected.Photos0} style={{height:'100%', width:'100%', objectFit:'contain'}} /> : ''} \n                              </Col>\n                              <Col span = {18} style = {{ height:250}}>\n                                <Row style = {{ marginLeft:12, height:'50%', width:'100%'}}> \n                                  <Col span ={6} style = {{ background:'white', height:'100%', padding:'12px', margin:'0 6px 0 0'}}>\n                                    <div >\n                                      <h6 style = {{color:'rgb(188, 188, 188)'}}>Time with Animal Friends</h6>\n                                    </div>\n                                    <div style = {{textAlign:'center', width:'100%', fontSize:36, color:'#B45B79'}}>\n                                    {this.state.animalSelected ? '36 Months': ''}\n                                    </div>\n                                  </Col>\n                                  <Col span ={6} style = {{ background:'white', height:'100%', padding:'12px', margin:'0 0 0 6px'}}>\n                                    <div >\n                                      <h6 style = {{color:'rgb(188, 188, 188)'}}>Age</h6>\n                                    </div>\n                                    <div style = {{textAlign:'center', width:'100%', fontSize:36, color:'#9DD17B'}}>\n                                    {this.state.animalSelected ? this.state.animalSelected.Age+ ' Months': ''}\n                                    </div>\n                                  </Col>\n                                  <Col span ={11} style = {{ background:'white', height:'100%', padding:'12px', margin:'0 0 0 12px'}}>\n                                    <div >\n                                      <h6 style = {{color:'rgb(188, 188, 188)'}}>Current Status</h6>\n                                    </div>\n                                    <div style = {{textAlign:'center', width:'100%', fontSize:36, color:'#6297BA'}}>\n                                    {this.state.animalSelected ? this.state.animalSelected.Status: ''}\n                                    </div>\n                                  </Col>\n                                </Row >\n                                <Row style = {{ marginLeft:12, height:'50%', width:'100%'}}>\n                                  <Col span = {24}>\n                                    <APBarchart data = {this.props.apEvents}/>\n                                  </Col>\n                                </Row>\n                              {/* </Col>\n                              <Col span = {24}> */}\n                              </Col>\n                            </Row>\n                            <Row style = {{margin:'16px 12px 12px 12px'}}>\n                                <Col span = {12} style = {{paddingRight:'8px'}}>  \n                                <Row>\n                                    <Col span= {24}>\n                                      <div className='ca-graph-title'>Notes</div>\n                                    </Col>\n                                  </Row>\n                                  <Row>\n                                    <Col span= {24} style = {{background:'white', height:525}}>\n                                      <APNotesTable data = {this.state.pivotNotes}/>\n                                    </Col>\n                                  </Row>\n                                </Col>\n                                <Col span = {12} style = {{paddingLeft:'8px'}}>  \n                                <Row>\n                                    <Col span= {24}>\n                                      <div className='ca-graph-title'>Events</div>\n                                    </Col>\n                                  </Row>\n                                  <Row>\n                                    <Col span= {24} style = {{background:'white', height:525}}>\n                                      <APEventsTable data = {this.props.apEvents}/>\n                                    </Col>\n                                  </Row>\n                                </Col>\n                            </Row>\n                          </Col>\n                      </Row>\n                  </Col>\n                </Row>\n                  \n                  \n\n              </div>\n            </div>\n\n    \n        )\n\n    }\n\n\n}\n\nconst mapStateToProps = (state) => {\n    return{\n      dates:state.animalprofile.dates,\n      apAnimals: state.animalprofile.apAnimals,\n      apNotes: state.animalprofile.apNotes,\n      apEvents: state.animalprofile.apEvents,\n\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n        return{\n          // getAPAnimals: () => dispatch(getAPAnimals()),\n          // getAPNotes: (id) => dispatch(getAPNotes(id)),\n          // getAPEvents: (id) => dispatch(getAPEvents(id)),\n        }\n    }\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AnimalProfile)                    ","/* globals window */\r\nimport { ApolloClient } from 'apollo-client';\r\nimport { InMemoryCache } from 'apollo-cache-inmemory';\r\nimport { SchemaLink } from 'apollo-link-schema';\r\nimport { makeExecutableSchema } from 'graphql-tools';\r\nconst cache = new InMemoryCache();\r\nconst defaultDashboardItems = [];\r\n\r\nconst getDashboardItems = () => JSON.parse(window.localStorage.getItem('dashboardItems')) || defaultDashboardItems;\r\n\r\nconst setDashboardItems = items => window.localStorage.setItem('dashboardItems', JSON.stringify(items));\r\n\r\nconst nextId = () => {\r\n  const currentId = parseInt(window.localStorage.getItem('dashboardIdCounter'), 10) || 1;\r\n  window.localStorage.setItem('dashboardIdCounter', currentId + 1);\r\n  return currentId.toString();\r\n};\r\n\r\nconst toApolloItem = i => ({ ...i,\r\n  __typename: 'DashboardItem'\r\n});\r\n\r\nconst typeDefs = `\r\n  type DashboardItem {\r\n    id: String!\r\n    layout: String\r\n    vizState: String\r\n    name: String\r\n  }\r\n\r\n  input DashboardItemInput {\r\n    layout: String\r\n    vizState: String\r\n    name: String\r\n  }\r\n\r\n  type Query {\r\n    dashboardItems: [DashboardItem]\r\n    dashboardItem(id: String!): DashboardItem\r\n  }\r\n\r\n  type Mutation {\r\n    createDashboardItem(input: DashboardItemInput): DashboardItem\r\n    updateDashboardItem(id: String!, input: DashboardItemInput): DashboardItem\r\n    deleteDashboardItem(id: String!): DashboardItem\r\n  }\r\n`;\r\nconst schema = makeExecutableSchema({\r\n  typeDefs,\r\n  resolvers: {\r\n    Query: {\r\n      dashboardItems() {\r\n        const dashboardItems = getDashboardItems();\r\n        return dashboardItems.map(toApolloItem);\r\n      },\r\n\r\n      dashboardItem(_, {\r\n        id\r\n      }) {\r\n        const dashboardItems = getDashboardItems();\r\n        return toApolloItem(dashboardItems.find(i => i.id.toString() === id));\r\n      }\r\n\r\n    },\r\n    Mutation: {\r\n      createDashboardItem: (_, {\r\n        input: { ...item\r\n        }\r\n      }) => {\r\n        const dashboardItems = getDashboardItems();\r\n        item = { ...item,\r\n          id: nextId(),\r\n          layout: JSON.stringify({})\r\n        };\r\n        dashboardItems.push(item);\r\n        setDashboardItems(dashboardItems);\r\n        return toApolloItem(item);\r\n      },\r\n      updateDashboardItem: (_, {\r\n        id,\r\n        input: { ...item\r\n        }\r\n      }) => {\r\n        const dashboardItems = getDashboardItems();\r\n        item = Object.keys(item).filter(k => !!item[k]).map(k => ({\r\n          [k]: item[k]\r\n        })).reduce((a, b) => ({ ...a,\r\n          ...b\r\n        }), {});\r\n        const index = dashboardItems.findIndex(i => i.id.toString() === id);\r\n        dashboardItems[index] = { ...dashboardItems[index],\r\n          ...item\r\n        };\r\n        setDashboardItems(dashboardItems);\r\n        return toApolloItem(dashboardItems[index]);\r\n      },\r\n      deleteDashboardItem: (_, {\r\n        id\r\n      }) => {\r\n        const dashboardItems = getDashboardItems();\r\n        const index = dashboardItems.findIndex(i => i.id.toString() === id);\r\n        const [removedItem] = dashboardItems.splice(index, 1);\r\n        setDashboardItems(dashboardItems);\r\n        return toApolloItem(removedItem);\r\n      }\r\n    }\r\n  }\r\n});\r\nexport default new ApolloClient({\r\n  cache,\r\n  link: new SchemaLink({\r\n    schema\r\n  })\r\n});","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { withRouter } from 'react-router';\r\nimport { Layout, Menu } from 'antd';\r\n\r\n\r\nconst Header = (\r\n  props\r\n) => <Layout.Header style={{\r\n  padding: '0 0',\r\n  marginBottom:0,\r\n  height:'24px'\r\n}}>\r\n    <div style={{\r\n    float: 'left'\r\n  }}>\r\n      <h2 style={{\r\n      color: '#fff',\r\n      margin: 0,\r\n      marginRight: '1em',\r\n      display: 'inline',\r\n      width: 100,\r\n      lineHeight: '20px'\r\n    }}>\r\n      </h2>\r\n    </div>\r\n    <Menu theme=\"dark\" mode=\"horizontal\" selectedKeys={[props.pageSelected]}  style={{\r\n    lineHeight: '24px',\r\n    height:'24px'\r\n  }}>\r\n      <Menu.Item key=\"explore\" onClick = {(e) => {props.changePage('explore'); props.setItemId(null)}}>\r\n        {/* <Link to=\"/explore\"> */}\r\n          Explore\r\n          {/* </Link> */}\r\n      </Menu.Item>\r\n      <Menu.Item key=\"dashboard\" onClick = {(e) => {props.changePage('dashboard'); props.setItemId(null)}} >\r\n        {/* <Link to=\"/\"> */}\r\n          Dashboard\r\n          {/* </Link> */}\r\n      </Menu.Item>\r\n    </Menu>\r\n  </Layout.Header>;\r\n\r\nexport default withRouter(Header);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useCubeQuery } from '@cubejs-client/react';\r\nimport { Spin, Row, Col, Statistic, Table } from 'antd';\r\nimport { CartesianGrid, PieChart, Pie, Cell, AreaChart, Area, XAxis, YAxis, Tooltip, ResponsiveContainer, Legend, BarChart, Bar, LineChart, Line } from 'recharts';\r\n\r\n\r\nconst CartesianChart = ({\r\n  resultSet,\r\n  children,\r\n  ChartComponent\r\n}) => <div style = {{height:'100%', paddingBottom:30}}>\r\n  <ResponsiveContainer width=\"100%\" >\r\n    <ChartComponent data={resultSet.chartPivot()}>\r\n      <XAxis dataKey=\"x\" />\r\n      <YAxis />\r\n      <CartesianGrid />\r\n      {children}\r\n      <Legend />\r\n      <Tooltip />\r\n    </ChartComponent>\r\n  </ResponsiveContainer>\r\n  </div>\r\n\r\nconst colors = ['#FF6492', '#141446', '#7A77FF'];\r\n\r\nconst stackedChartData = resultSet => {\r\n  const data = resultSet.pivot().map(({\r\n    xValues,\r\n    yValuesArray\r\n  }) => yValuesArray.map(([yValues, m]) => ({\r\n    x: resultSet.axisValuesString(xValues, ', '),\r\n    color: resultSet.axisValuesString(yValues, ', '),\r\n    measure: m && Number.parseFloat(m)\r\n  }))).reduce((a, b) => a.concat(b), []);\r\n  return data;\r\n};\r\n\r\nconst TypeToChartComponent = {\r\n  line: ({\r\n    resultSet\r\n  }) => {\r\n    return <CartesianChart resultSet={resultSet} ChartComponent={LineChart}>\r\n        {resultSet.seriesNames().map((series, i) => <Line key={series.key} stackId=\"a\" dataKey={series.key} name={series.title} stroke={colors[i]} />)}\r\n      </CartesianChart>;\r\n  },\r\n  bar: ({\r\n    resultSet\r\n  }) => {\r\n    return <CartesianChart resultSet={resultSet} ChartComponent={BarChart}>\r\n        {resultSet.seriesNames().map((series, i) => <Bar key={series.key} stackId=\"a\" dataKey={series.key} name={series.title} fill={colors[i]} />)}\r\n      </CartesianChart>;\r\n  },\r\n  area: ({\r\n    resultSet\r\n  }) => {\r\n    return <CartesianChart resultSet={resultSet} ChartComponent={AreaChart}>\r\n        {resultSet.seriesNames().map((series, i) => <Area key={series.key} stackId=\"a\" dataKey={series.key} name={series.title} stroke={colors[i]} fill={colors[i]} />)}\r\n      </CartesianChart>\r\n  },\r\n  pie: ({\r\n    resultSet\r\n  }) => {\r\n    return (\r\n    <div style = {{height:'100%', paddingBottom:50}}>\r\n      <ResponsiveContainer width=\"100%\" >\r\n          <PieChart>\r\n            <Pie isAnimationActive={false} data={resultSet.chartPivot()} nameKey=\"x\" dataKey={resultSet.seriesNames()[0].key} fill=\"#8884d8\">\r\n              {resultSet.chartPivot().map((e, index) => <Cell key={index} fill={colors[index % colors.length]} />)}\r\n            </Pie>\r\n            <Legend />\r\n            <Tooltip />\r\n          </PieChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n      )\r\n  },\r\n\r\n  number({\r\n    resultSet\r\n  }) {\r\n    return <Row type=\"flex\" justify=\"center\" align=\"middle\" style={{\r\n      // height: '100%'\r\n      fontSize:'2vw'\r\n    }}>\r\n        <Col>\r\n          {resultSet.seriesNames().map(s => <Statistic value={resultSet.totalRow()[s.key]} />)}\r\n        </Col>\r\n      </Row>;\r\n  },\r\n\r\n  table({\r\n    resultSet,\r\n    pivotConfig\r\n  }) {\r\n    return <Table pagination={true} style= {{height:'90%', overflow:'auto'}} columns={resultSet.tableColumns(pivotConfig)} dataSource={resultSet.tablePivot(pivotConfig)} />;\r\n  }\r\n\r\n};\r\nconst TypeToMemoChartComponent = Object.keys(TypeToChartComponent).map(key => ({\r\n  [key]: React.memo(TypeToChartComponent[key])\r\n})).reduce((a, b) => ({ ...a,\r\n  ...b\r\n}));\r\n\r\nconst renderChart = Component => ({\r\n  resultSet,\r\n  error,\r\n  pivotConfig\r\n}) => resultSet && <Component resultSet={resultSet} pivotConfig={pivotConfig} /> || error && error.toString() || <Spin />;\r\n\r\nconst ChartRenderer = ({\r\n  vizState\r\n}) => {\r\n  const {\r\n    query,\r\n    chartType,\r\n    pivotConfig\r\n  } = vizState;\r\n  const component = TypeToMemoChartComponent[chartType];\r\n  const renderProps = useCubeQuery(query);\r\n  if(component){\r\n    return component && renderChart(component)({ ...renderProps,\r\n      pivotConfig\r\n    });\r\n  }else{\r\n    return <div style = {{height:'100mv',margin:'auto', textAlign:'center'}}> \r\n      Error: Dashboard Data Incorrect. Please edit to a proper format.\r\n    </div>\r\n  }\r\n};\r\n\r\nChartRenderer.propTypes = {\r\n  vizState: PropTypes.object,\r\n  cubejsApi: PropTypes.object\r\n};\r\nChartRenderer.defaultProps = {\r\n  vizState: {},\r\n  cubejsApi: null\r\n};\r\nexport default ChartRenderer;","import React from 'react';\r\nimport * as PropTypes from 'prop-types';\r\nimport { Button, Dropdown, Menu } from 'antd';\r\n\r\nclass OverlayVisible extends React.Component {\r\n \r\n  constructor(props){\r\n    super(props)\r\n\r\n  this.state = {\r\n    visible: false,\r\n  };\r\n}\r\n\r\n  \r\n\r\n\r\n\r\n  handleMenuClick = e => {\r\n    if (e.key === '3') {\r\n      this.setState({ visible: false });\r\n    }\r\n  };\r\n\r\n  handleVisibleChange = flag => {\r\n    this.setState({ visible: flag });\r\n  };\r\n\r\n  render() {\r\n    const menu = (\r\n      <Menu onClick={this.handleMenuClick}>\r\n        <Menu.Item key=\"1\">Clicking me will not close the menu.</Menu.Item>\r\n        <Menu.Item key=\"2\">Clicking me will not close the menu also.</Menu.Item>\r\n        <Menu.Item key=\"3\">Clicking me will close the menu.</Menu.Item>\r\n      </Menu>\r\n    );\r\n\r\n    return (\r\n      <Dropdown overlay={this.props.overlay} \r\n      overlayStyle = {{ width:300}}\r\n      placement=\"bottomLeft\" \r\n      trigger={['click']}\r\n      onVisibleChange={this.handleVisibleChange}\r\n      visible={this.state.visible}\r\n      >\r\n          <Button type ={this.props.type} children= {this.props.children} icon = {this.props.icon} />\r\n      </Dropdown>\r\n    );\r\n  }\r\n}\r\n\r\nconst ButtonDropdown = ({\r\n  overlay,\r\n  ...buttonProps\r\n}) => { console.log(overlay);console.log(buttonProps); return };\r\n\r\nButtonDropdown.propTypes = {\r\n  overlay: PropTypes.object.isRequired\r\n};\r\nexport default OverlayVisible;","import React from 'react';\r\nimport * as PropTypes from 'prop-types';\r\nimport { Menu, Select } from 'antd';\r\nimport ButtonDropdown from './ButtonDropdown'; // Can't be a Pure Component due to Dropdown lookups overlay component type to set appropriate styles\r\n\r\nconst memberMenu = (onClick, availableMembers) => <Menu>\r\n    {availableMembers.length ? <Menu.ItemGroup>\r\n        <Select \r\n            showSearch\r\n            filterOption={(input, option) =>\r\n            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n            }\r\n            onChange = {(e) =>{console.log(e); onClick({name:e})}}\r\n            style={{\r\n            width: '100%',\r\n            height:'100%',\r\n            paddingBottom:10\r\n            //marginRight: 8\r\n            }}>\r\n            {availableMembers.length ? availableMembers.map(m => <Select.Option key={m.name} value={m.name}>\r\n              {m.title}\r\n            </Select.Option>) : <Select.Option disabled>No members found</Select.Option>}\r\n        </Select> \r\n      </Menu.ItemGroup>\r\n        \r\n         : <Menu.Item disabled>No members found</Menu.Item>}\r\n  </Menu>;\r\n\r\nconst MemberDropdown = ({\r\n  onClick,\r\n  availableMembers,\r\n  ...buttonProps\r\n}) => <ButtonDropdown overlay={memberMenu(onClick, availableMembers)} {...buttonProps} />;\r\n\r\nMemberDropdown.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  availableMembers: PropTypes.array.isRequired\r\n};\r\nexport default MemberDropdown;","import React from 'react';\r\nimport * as PropTypes from 'prop-types';\r\nimport { Button } from 'antd';\r\nimport { Icon } from '@ant-design/compatible';\r\n\r\nconst RemoveButtonGroup = ({\r\n  onRemoveClick,\r\n  children,\r\n  ...props\r\n}) => <Button.Group style={{\r\n  marginRight: 8\r\n}} {...props}>\r\n    {children}\r\n    <Button type=\"danger\" ghost onClick={onRemoveClick}>\r\n      <Icon type=\"close\" />\r\n    </Button>\r\n  </Button.Group>;\r\n\r\nRemoveButtonGroup.propTypes = {\r\n  onRemoveClick: PropTypes.func.isRequired,\r\n  children: PropTypes.object.isRequired\r\n};\r\nexport default RemoveButtonGroup;","import React from 'react';\r\nimport * as PropTypes from 'prop-types';\r\nimport { Icon } from '@ant-design/compatible';\r\nimport MemberDropdown from './MemberDropdown';\r\nimport RemoveButtonGroup from './RemoveButtonGroup';\r\n\r\nconst MemberGroup = ({\r\n  members,\r\n  availableMembers,\r\n  addMemberName,\r\n  updateMethods\r\n}) => { console.log(members) ; return <span>\r\n    {members.map(m => <RemoveButtonGroup key={m.index || m.name} onRemoveClick={() => updateMethods.remove(m)}>\r\n        <MemberDropdown availableMembers={availableMembers} onClick={updateWith => updateMethods.update(m, updateWith)}>\r\n          {m.title}\r\n        </MemberDropdown>\r\n      </RemoveButtonGroup>)}\r\n    <MemberDropdown onClick={m => updateMethods.add(m)} availableMembers={availableMembers} members = {members} type=\"dashed\" icon={<Icon type=\"plus\" />}>\r\n      {addMemberName}\r\n    </MemberDropdown>\r\n  </span>};\r\n\r\nMemberGroup.propTypes = {\r\n  members: PropTypes.array.isRequired,\r\n  availableMembers: PropTypes.array.isRequired,\r\n  addMemberName: PropTypes.string.isRequired,\r\n  updateMethods: PropTypes.object.isRequired\r\n};\r\nexport default MemberGroup;","import React from 'react';\r\nimport * as PropTypes from 'prop-types';\r\nimport { Select, Input } from 'antd';\r\nconst FilterInputs = {\r\n  string: ({\r\n    values,\r\n    onChange\r\n  }) => <Select key=\"input\" style={{\r\n    width: 300\r\n  }} mode=\"tags\" onChange={onChange} value={values} />,\r\n  number: ({\r\n    values,\r\n    onChange\r\n  }) => <Input key=\"input\" style={{\r\n    width: 300\r\n  }} onChange={e => onChange([e.target.value])} value={values && values[0] || ''} />\r\n};\r\nFilterInputs.string.propTypes = {\r\n  values: PropTypes.array,\r\n  onChange: PropTypes.func.isRequired\r\n};\r\nFilterInputs.string.defaultProps = {\r\n  values: []\r\n};\r\nFilterInputs.number.propTypes = {\r\n  values: PropTypes.array,\r\n  onChange: PropTypes.func.isRequired\r\n};\r\nFilterInputs.number.defaultProps = {\r\n  values: []\r\n};\r\n\r\nconst FilterInput = ({\r\n  member,\r\n  updateMethods\r\n}) => {\r\n  const Filter = FilterInputs[member.dimension.type] || FilterInputs.string;\r\n  return <Filter key=\"filter\" values={member.values} onChange={values => updateMethods.update(member, { ...member,\r\n    values\r\n  })} />;\r\n};\r\n\r\nFilterInput.propTypes = {\r\n  member: PropTypes.object.isRequired,\r\n  updateMethods: PropTypes.object.isRequired\r\n};\r\nexport default FilterInput;","import React from 'react';\r\nimport * as PropTypes from 'prop-types';\r\nimport { Select } from 'antd';\r\nimport { Icon } from '@ant-design/compatible';\r\nimport MemberDropdown from './MemberDropdown';\r\nimport RemoveButtonGroup from './RemoveButtonGroup';\r\nimport FilterInput from './FilterInput';\r\n\r\nconst FilterGroup = ({\r\n  members,\r\n  availableMembers,\r\n  addMemberName,\r\n  updateMethods\r\n}) => <span>\r\n    {members.map(m => <div style={{\r\n    marginBottom: 12\r\n  }} key={m.index}>\r\n        <RemoveButtonGroup onRemoveClick={() => updateMethods.remove(m)}>\r\n          <MemberDropdown onClick={updateWith => updateMethods.update(m, { ...m,\r\n        dimension: updateWith\r\n      })} availableMembers={availableMembers} style={{\r\n        width: 150,\r\n        textOverflow: 'ellipsis',\r\n        overflow: 'hidden'\r\n      }}>\r\n            {m.dimension.title}\r\n          </MemberDropdown>\r\n        </RemoveButtonGroup>\r\n        <Select value={m.operator} onChange={operator => updateMethods.update(m, { ...m,\r\n      operator\r\n    })} style={{\r\n      width: 200,\r\n      marginRight: 8\r\n    }}>\r\n          {m.operators.map(operator => <Select.Option key={operator.name} value={operator.name}>\r\n              {operator.title}\r\n            </Select.Option>)}\r\n        </Select>\r\n        <FilterInput member={m} key=\"filterInput\" updateMethods={updateMethods} />\r\n      </div>)}\r\n    <MemberDropdown onClick={m => updateMethods.add({\r\n    dimension: m\r\n  })} availableMembers={availableMembers} type=\"dashed\" icon={<Icon type=\"plus\" />}>\r\n      {addMemberName}\r\n    </MemberDropdown>\r\n  </span>;\r\n\r\nFilterGroup.propTypes = {\r\n  members: PropTypes.array.isRequired,\r\n  availableMembers: PropTypes.array.isRequired,\r\n  addMemberName: PropTypes.string.isRequired,\r\n  updateMethods: PropTypes.object.isRequired\r\n};\r\nexport default FilterGroup;","import React from 'react';\r\nimport * as PropTypes from 'prop-types';\r\nimport { Menu } from 'antd';\r\nimport { Icon } from '@ant-design/compatible';\r\nimport ButtonDropdown from './ButtonDropdown';\r\nimport MemberDropdown from './MemberDropdown';\r\nimport RemoveButtonGroup from './RemoveButtonGroup';\r\nconst DateRanges = [{\r\n  title: 'All time',\r\n  value: undefined\r\n}, {\r\n  value: 'Today'\r\n}, {\r\n  value: 'Yesterday'\r\n}, {\r\n  value: 'This week'\r\n}, {\r\n  value: 'This month'\r\n}, {\r\n  value: 'This quarter'\r\n}, {\r\n  value: 'This year'\r\n}, {\r\n  value: 'Last 7 days'\r\n}, {\r\n  value: 'Last 30 days'\r\n}, {\r\n  value: 'Last week'\r\n}, {\r\n  value: 'Last month'\r\n}, {\r\n  value: 'Last quarter'\r\n}, {\r\n  value: 'Last year'\r\n}];\r\n\r\nconst TimeGroup = ({\r\n  members,\r\n  availableMembers,\r\n  addMemberName,\r\n  updateMethods\r\n}) => {\r\n  const granularityMenu = (member, onClick) => <Menu>\r\n      {member.granularities.length ? member.granularities.map(m => <Menu.Item key={m.title} onClick={() => onClick(m)}>\r\n            {m.title}\r\n          </Menu.Item>) : <Menu.Item disabled>No members found</Menu.Item>}\r\n    </Menu>;\r\n\r\n  const dateRangeMenu = onClick => <Menu>\r\n      {DateRanges.map(m => <Menu.Item key={m.title || m.value} onClick={() => onClick(m)}>\r\n          {m.title || m.value}\r\n        </Menu.Item>)}\r\n    </Menu>;\r\n\r\n  return <span>\r\n      {members.map(m => [<RemoveButtonGroup onRemoveClick={() => updateMethods.remove(m)} key={`${m.dimension.name}-member`}>\r\n          <MemberDropdown onClick={updateWith => updateMethods.update(m, { ...m,\r\n        dimension: updateWith\r\n      })} availableMembers={availableMembers}>\r\n            {m.dimension.title}\r\n          </MemberDropdown>\r\n        </RemoveButtonGroup>, <b style = {{padding: '0 10px 0 0'}} key={`${m.dimension.name}-for`}>FOR</b>, <ButtonDropdown overlay={dateRangeMenu(dateRange => updateMethods.update(m, { ...m,\r\n      dateRange: dateRange.value\r\n    }))} style={{\r\n      marginLeft: 8,\r\n      marginRight: 8\r\n    }} key={`${m.dimension.name}-date-range`}>\r\n          {m.dateRange || 'All time'}\r\n        </ButtonDropdown>, <b style = {{padding: '0 10px'}} key={`${m.dimension.name}-by`}>BY</b>, <ButtonDropdown overlay={granularityMenu(m.dimension, granularity => updateMethods.update(m, { ...m,\r\n      granularity: granularity.name\r\n    }))} style={{\r\n      marginLeft: 8\r\n    }} key={`${m.dimension.name}-granularity`}>\r\n          {m.dimension.granularities.find(g => g.name === m.granularity) && m.dimension.granularities.find(g => g.name === m.granularity).title}\r\n        </ButtonDropdown>])}\r\n      {!members.length && <MemberDropdown onClick={member => updateMethods.add({\r\n      dimension: member,\r\n      granularity: 'day'\r\n    })} availableMembers={availableMembers} type=\"dashed\" icon={<Icon type=\"plus\" />}>\r\n          {addMemberName}\r\n        </MemberDropdown>}\r\n    </span>;\r\n};\r\n\r\nTimeGroup.propTypes = {\r\n  members: PropTypes.array.isRequired,\r\n  availableMembers: PropTypes.array.isRequired,\r\n  addMemberName: PropTypes.string.isRequired,\r\n  updateMethods: PropTypes.object.isRequired\r\n};\r\nexport default TimeGroup;","import React from 'react';\r\nimport * as PropTypes from 'prop-types';\r\nimport { Menu } from 'antd';\r\nimport { Icon } from '@ant-design/compatible';\r\nimport ButtonDropdown from './ButtonDropdown';\r\nconst ChartTypes = [{\r\n  name: 'line',\r\n  title: 'Line',\r\n  icon: 'line-chart'\r\n}, {\r\n  name: 'area',\r\n  title: 'Area',\r\n  icon: 'area-chart'\r\n}, {\r\n  name: 'bar',\r\n  title: 'Bar',\r\n  icon: 'bar-chart'\r\n}, {\r\n  name: 'pie',\r\n  title: 'Pie',\r\n  icon: 'pie-chart'\r\n}, {\r\n  name: 'table',\r\n  title: 'Table',\r\n  icon: 'table'\r\n}, {\r\n  name: 'number',\r\n  title: 'Number',\r\n  icon: 'info-circle'\r\n}];\r\n\r\nconst SelectChartType = ({\r\n  chartType,\r\n  updateChartType\r\n}) => {\r\n  const menu = <Menu>\r\n      {ChartTypes.map(m => <Menu.Item key={m.title} onClick={() => updateChartType(m.name)}>\r\n          <Icon type={m.icon} />\r\n          {m.title}\r\n        </Menu.Item>)}\r\n    </Menu>;\r\n  const foundChartType = ChartTypes.find(t => t.name === chartType);\r\n  return <ButtonDropdown overlay={menu} icon={<Icon type={foundChartType.icon} />}>\r\n      {foundChartType.title}\r\n    </ButtonDropdown>;\r\n};\r\n\r\nSelectChartType.propTypes = {\r\n  chartType: PropTypes.string.isRequired,\r\n  updateChartType: PropTypes.func.isRequired\r\n};\r\nexport default SelectChartType;","import React from 'react';\r\nimport { Button, Typography } from 'antd';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport { DragOutlined } from '@ant-design/icons';\r\nconst orderOptions = ['asc', 'desc', 'none'];\r\nexport default function DraggableItem({\r\n  id,\r\n  index,\r\n  order = 'none',\r\n  children,\r\n  onOrderChange\r\n}) {\r\n  const getNextOrder = () => {\r\n    const index = orderOptions.indexOf(order) + 1;\r\n    return orderOptions[index > 2 ? 0 : index];\r\n  };\r\n\r\n  return <Draggable draggableId={id} index={index}>\r\n      {({\r\n      draggableProps,\r\n      dragHandleProps,\r\n      innerRef\r\n    }) => <div ref={innerRef} {...draggableProps} {...dragHandleProps} style={{\r\n      display: 'flex',\r\n      flexWrap: 'nowrap',\r\n      justifyContent: 'space-between',\r\n      alignItems: 'center',\r\n      marginBottom: 8,\r\n      ...draggableProps.style\r\n    }}>\r\n          <DragOutlined />\r\n\r\n          <Typography.Text ellipsis style={{\r\n        margin: '0 auto 0 8px'\r\n      }}>\r\n            {children}\r\n          </Typography.Text>\r\n\r\n          <Button type={order !== 'none' ? 'primary' : null} size=\"small\" style={{\r\n        minWidth: 70,\r\n        marginLeft: 8\r\n      }} onClick={() => onOrderChange(id, getNextOrder())}>\r\n            {order.toUpperCase()}\r\n          </Button>\r\n        </div>}\r\n    </Draggable>;\r\n}","import React from 'react';\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\r\nimport DraggableItem from './DraggableItem';\r\nexport default function OrderGroup({\r\n  orderMembers,\r\n  onOrderChange,\r\n  onReorder\r\n}) {\r\n  return <DragDropContext onDragEnd={({\r\n    source,\r\n    destination\r\n  }) => {\r\n    onReorder(source && source.index, destination && destination.index);\r\n  }}>\r\n      <Droppable droppableId=\"droppable\">\r\n        {provided => <div ref={provided.innerRef} {...provided.droppableProps} style={{\r\n        paddingTop: 8,\r\n        width: 260\r\n      }}>\r\n            {orderMembers.map(({\r\n          id,\r\n          title,\r\n          order\r\n        }, index) => <DraggableItem key={id} id={id} index={index} order={order} onOrderChange={onOrderChange}>\r\n                {title}\r\n              </DraggableItem>)}\r\n\r\n            {provided.placeholder}\r\n          </div>}\r\n      </Droppable>\r\n    </DragDropContext>;\r\n}","import React from 'react';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport { DragOutlined } from '@ant-design/icons';\r\nimport { Typography } from 'antd';\r\nexport default function Item({\r\n  id,\r\n  index\r\n}) {\r\n  return <Draggable draggableId={id} index={index}>\r\n      {({\r\n      draggableProps,\r\n      dragHandleProps,\r\n      innerRef\r\n    }) => <div ref={innerRef} {...draggableProps} {...dragHandleProps} style={{ ...draggableProps.style\r\n    }}>\r\n          <Typography.Text ellipsis style={{\r\n        maxWidth: '100%'\r\n      }}>\r\n            <DragOutlined style={{\r\n          marginRight: 8\r\n        }} />\r\n            {id}\r\n          </Typography.Text>\r\n        </div>}\r\n    </Draggable>;\r\n}","import React from 'react';\r\nimport { Typography } from 'antd';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\nimport Item from './Item';\r\nexport default function DroppableArea({\r\n  pivotConfig,\r\n  axis\r\n}) {\r\n  return <>\r\n      <Typography.Text strong style={{\r\n      display: 'flex',\r\n      justifyContent: 'center'\r\n    }}>\r\n        {axis}\r\n      </Typography.Text>\r\n      <Droppable droppableId={axis}>\r\n        {provided => <div ref={provided.innerRef} {...provided.droppableProps} style={{\r\n        height: '100%'\r\n      }}>\r\n            {pivotConfig[axis].map((id, index) => <Item key={id} id={id} index={index} />)}\r\n\r\n            {provided.placeholder}\r\n          </div>}\r\n      </Droppable>\r\n    </>;\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { DragDropContext } from 'react-beautiful-dnd';\r\nimport { Row, Col, Divider } from 'antd';\r\nimport DroppableArea from './DroppableArea';\r\nexport default function Axes({\r\n  pivotConfig,\r\n  onMove\r\n}) {\r\n  const [uiPivotConfig, setUIPivotConfig] = useState(pivotConfig);\r\n  useEffect(() => {\r\n    setUIPivotConfig(pivotConfig);\r\n  }, [pivotConfig]);\r\n  return <DragDropContext onDragEnd={({\r\n    source,\r\n    destination,\r\n    ...props\r\n  }) => {\r\n    if (!destination) {\r\n      return;\r\n    }\r\n\r\n    onMove({\r\n      sourceIndex: source.index,\r\n      destinationIndex: destination.index,\r\n      sourceAxis: source.droppableId,\r\n      destinationAxis: destination.droppableId,\r\n\r\n      callback(updatedPivotConfig) {\r\n        setUIPivotConfig(updatedPivotConfig);\r\n      }\r\n\r\n    });\r\n  }}>\r\n      <Row>\r\n        <Col span={11}>\r\n          <DroppableArea pivotConfig={uiPivotConfig} axis=\"x\" />\r\n        </Col>\r\n\r\n        <Col span={2}>\r\n          <Divider style={{\r\n          height: '100%'\r\n        }} type=\"vertical\" />\r\n        </Col>\r\n\r\n        <Col span={11}>\r\n          <DroppableArea pivotConfig={uiPivotConfig} axis=\"y\" />\r\n        </Col>\r\n      </Row>\r\n    </DragDropContext>;\r\n}","import { Checkbox } from 'antd';\r\nimport React from 'react';\r\nexport default function Options({\r\n  pivotConfig,\r\n  onUpdate\r\n}) {\r\n  return <Checkbox checked={pivotConfig.fillMissingDates} onChange={() => onUpdate({\r\n    fillMissingDates: !pivotConfig.fillMissingDates\r\n  })}>\r\n      Fill Missing Dates\r\n    </Checkbox>;\r\n}","import React from 'react';\r\nimport { Tabs } from 'antd';\r\nimport Axes from './Axes';\r\nimport Options from './Options';\r\nexport default function Pivot({\r\n  pivotConfig,\r\n  onMove,\r\n  onUpdate\r\n}) {\r\n  return <Tabs style={{\r\n    width: 340\r\n  }}>\r\n      <Tabs.TabPane tab=\"Pivot\" key=\"1\">\r\n        <Axes pivotConfig={pivotConfig} onMove={onMove} />\r\n      </Tabs.TabPane>\r\n\r\n      <Tabs.TabPane tab=\"Options\" key=\"2\">\r\n        <Options pivotConfig={pivotConfig} onUpdate={onUpdate} />\r\n      </Tabs.TabPane>\r\n    </Tabs>;\r\n}","import React, { Fragment } from 'react';\r\nimport * as PropTypes from 'prop-types';\r\nimport { Row, Col, Divider, Card, Popover, Button } from 'antd';\r\nimport { SortAscendingOutlined, BorderInnerOutlined } from '@ant-design/icons';\r\nimport { QueryBuilder } from '@cubejs-client/react';\r\nimport ChartRenderer from '../ChartRenderer';\r\nimport MemberGroup from './MemberGroup';\r\nimport FilterGroup from './FilterGroup';\r\nimport TimeGroup from './TimeGroup';\r\nimport SelectChartType from './SelectChartType';\r\nimport OrderGroup from './Order/OrderGroup';\r\nimport Pivot from './Pivot/Pivot';\r\nexport default function ExploreQueryBuilder({\r\n  vizState,\r\n  cubejsApi,\r\n  setVizState,\r\n  chartExtra\r\n}) {\r\n  return <QueryBuilder vizState={vizState} setVizState={setVizState} cubejsApi={cubejsApi} wrapWithQueryRenderer={false} render={({\r\n    validatedQuery,\r\n    isQueryPresent,\r\n    chartType,\r\n    updateChartType,\r\n    measures,\r\n    availableMeasures,\r\n    updateMeasures,\r\n    dimensions,\r\n    availableDimensions,\r\n    updateDimensions,\r\n    segments,\r\n    availableSegments,\r\n    updateSegments,\r\n    filters,\r\n    updateFilters,\r\n    timeDimensions,\r\n    availableTimeDimensions,\r\n    updateTimeDimensions,\r\n    orderMembers,\r\n    updateOrder,\r\n    pivotConfig,\r\n    updatePivotConfig\r\n  }) => {\r\n    return <Fragment>\r\n            <Row type=\"flex\" justify=\"space-around\" align=\"top\" gutter={24} style={{\r\n        marginBottom: 12, display:'inherit'\r\n      }}>\r\n              <Col span={24}>\r\n                <Card>\r\n                  <Row type=\"flex\" justify=\"space-around\" align=\"top\" gutter={24} style={{\r\n              marginBottom: 12\r\n            }}>\r\n                    <Col span={24}>\r\n                      <MemberGroup members={measures} availableMembers={availableMeasures} addMemberName=\"Measure\" updateMethods={updateMeasures} />\r\n                      <Divider type=\"vertical\" />\r\n                      <MemberGroup members={dimensions} availableMembers={availableDimensions} addMemberName=\"Dimension\" updateMethods={updateDimensions} />\r\n                      <Divider type=\"vertical\" />\r\n                      <MemberGroup members={segments} availableMembers={availableSegments} addMemberName=\"Segment\" updateMethods={updateSegments} />\r\n                      <Divider type=\"vertical\" />\r\n                      <TimeGroup members={timeDimensions} availableMembers={availableTimeDimensions} addMemberName=\"Time\" updateMethods={updateTimeDimensions} />\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row type=\"flex\" justify=\"space-around\" align=\"top\" gutter={24} style={{\r\n              marginBottom: 12\r\n            }}>\r\n                    <Col span={24}>\r\n                      <FilterGroup members={filters} availableMembers={availableDimensions.concat(availableMeasures)} addMemberName=\"Filter\" updateMethods={updateFilters} />\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row type=\"flex\" justify=\"space-around\" align=\"top\" gutter={24}>\r\n                    <Col span={24}>\r\n                      <SelectChartType chartType={chartType} updateChartType={updateChartType} />\r\n\r\n                      <Divider type=\"vertical\" />\r\n\r\n                      <Popover content={<OrderGroup orderMembers={orderMembers} onReorder={updateOrder.reorder} onOrderChange={updateOrder.set} />} placement=\"bottomLeft\" trigger=\"click\">\r\n                        <Button disabled={!isQueryPresent} icon={<SortAscendingOutlined />}>\r\n                          Order\r\n                        </Button>\r\n                      </Popover>\r\n\r\n                      <Divider type=\"vertical\" />\r\n\r\n                      <Popover content={<Pivot pivotConfig={pivotConfig} onMove={updatePivotConfig.moveItem} onUpdate={updatePivotConfig.update} />} placement=\"bottomLeft\" trigger=\"click\">\r\n                        <Button disabled={!isQueryPresent} icon={<BorderInnerOutlined />}>\r\n                          Pivot\r\n                        </Button>\r\n                      </Popover>\r\n                    </Col>\r\n                  </Row>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row type=\"flex\" justify=\"space-around\" align=\"top\" gutter={24}>\r\n              <Col span={24}>\r\n                {isQueryPresent ? <Card style={{\r\n            margin: '50px 250px',\r\n            minHeight: 420\r\n          }} extra={chartExtra}>\r\n                  <div style = {{height:350}}>\r\n                    <ChartRenderer vizState={{\r\n                                  query: validatedQuery,\r\n                                  chartType,\r\n                                  pivotConfig\r\n                      }} cubejsApi={cubejsApi} />\r\n                  </div>\r\n                    \r\n                  </Card> : <h2 style={{\r\n            textAlign: 'center'\r\n          }}>\r\n                    Choose a measure or dimension to get started\r\n                  </h2>}\r\n              </Col>\r\n            </Row>\r\n          </Fragment>;\r\n  }} />;\r\n}\r\nExploreQueryBuilder.propTypes = {\r\n  vizState: PropTypes.object,\r\n  setVizState: PropTypes.func,\r\n  cubejsApi: PropTypes.object,\r\n  chartExtra: PropTypes.array\r\n};\r\nExploreQueryBuilder.defaultProps = {\r\n  vizState: {},\r\n  setVizState: null,\r\n  cubejsApi: null,\r\n  chartExtra: null\r\n};","import gql from 'graphql-tag';\r\nexport const GET_DASHBOARD_ITEMS = gql`\r\n  query GetDashboardItems {\r\n    dashboardItems {\r\n      id\r\n      layout\r\n      vizState\r\n      name\r\n    }\r\n  }\r\n`;\r\nexport const GET_DASHBOARD_ITEM = gql`\r\n  query GetDashboardItem($id: String!) {\r\n    dashboardItem(id: $id) {\r\n      id\r\n      layout\r\n      vizState\r\n      name\r\n    }\r\n  }\r\n`;","import gql from 'graphql-tag';\r\nexport const CREATE_DASHBOARD_ITEM = gql`\r\n  mutation CreateDashboardItem($input: DashboardItemInput) {\r\n    createDashboardItem(input: $input) {\r\n      id\r\n      layout\r\n      vizState\r\n      name\r\n    }\r\n  }\r\n`;\r\nexport const UPDATE_DASHBOARD_ITEM = gql`\r\n  mutation UpdateDashboardItem($id: String!, $input: DashboardItemInput) {\r\n    updateDashboardItem(id: $id, input: $input) {\r\n      id\r\n      layout\r\n      vizState\r\n      name\r\n    }\r\n  }\r\n`;\r\nexport const DELETE_DASHBOARD_ITEM = gql`\r\n  mutation DeleteDashboardItem($id: String!) {\r\n    deleteDashboardItem(id: $id) {\r\n      id\r\n      layout\r\n      vizState\r\n      name\r\n    }\r\n  }\r\n`;","import React from 'react';\r\nimport { Modal, Input } from 'antd';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { GET_DASHBOARD_ITEMS } from '../graphql/queries';\r\nimport { CREATE_DASHBOARD_ITEM, UPDATE_DASHBOARD_ITEM } from '../graphql/mutations';\r\n\r\nconst TitleModal = ({\r\n  history,\r\n  itemId,\r\n  titleModalVisible,\r\n  setTitleModalVisible,\r\n  setAddingToDashboard,\r\n  finalVizState,\r\n  setTitle,\r\n  finalTitle,\r\n  changePage,\r\n}) => {\r\n  const [addDashboardItem] = useMutation(CREATE_DASHBOARD_ITEM, {\r\n    refetchQueries: [{\r\n      query: GET_DASHBOARD_ITEMS\r\n    }]\r\n  });\r\n  const [updateDashboardItem] = useMutation(UPDATE_DASHBOARD_ITEM, {\r\n    refetchQueries: [{\r\n      query: GET_DASHBOARD_ITEMS\r\n    }]\r\n  });\r\n  return <Modal key=\"modal\" title=\"Save Chart\" visible={titleModalVisible} onOk={async () => {\r\n    setTitleModalVisible(false);\r\n    setAddingToDashboard(true);\r\n\r\n    try {\r\n      await (itemId ? updateDashboardItem : addDashboardItem)({\r\n        variables: {\r\n          id: itemId,\r\n          input: {\r\n            vizState: JSON.stringify(finalVizState),\r\n            name: finalTitle\r\n          }\r\n        }\r\n      });\r\n      // history.push('/');\r\n      changePage('dashboard')\r\n    } finally {\r\n      setAddingToDashboard(false);\r\n    }\r\n  }} onCancel={() => setTitleModalVisible(false)}>\r\n      <Input placeholder=\"Dashboard Item Name\" value={finalTitle} onChange={e => setTitle(e.target.value)} />\r\n    </Modal>;\r\n};\r\n\r\nexport default TitleModal;","import React, { useState } from 'react';\r\nimport { Alert, Button, Spin } from 'antd';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ExploreQueryBuilder from '../components/QueryBuilder/ExploreQueryBuilder';\r\nimport { GET_DASHBOARD_ITEM } from '../graphql/queries';\r\nimport TitleModal from '../components/TitleModal.js';\r\n\r\nconst ExplorePage = (props) => {\r\n\r\n  const { match, location, history } = props;\r\n  const [addingToDashboard, setAddingToDashboard] = useState(false);\r\n  // const params = new URLSearchParams(location.search);\r\n  // const itemId = params.get('itemId');\r\n  const itemId = props.itemId\r\n  const {\r\n    loading,\r\n    error,\r\n    data\r\n  } = useQuery(GET_DASHBOARD_ITEM, {\r\n    variables: {\r\n      id: itemId\r\n    },\r\n    skip: !itemId\r\n  });\r\n  const [vizState, setVizState] = useState(null);\r\n  const finalVizState = vizState || itemId && !loading && data && JSON.parse(data.dashboardItem.vizState) || {};\r\n  const [titleModalVisible, setTitleModalVisible] = useState(false);\r\n  const [title, setTitle] = useState(null);\r\n  const finalTitle = title != null ? title : itemId && !loading && data && data.dashboardItem.name || 'New Chart';\r\n\r\n\r\n  // if(itemId = 1){\r\n  //   setVizState(true)\r\n  // }\r\n\r\n  if (loading) {\r\n    return <Spin />;\r\n  }\r\n\r\n  if (error) {\r\n    return <Alert type=\"error\" message={error.toString()} />;\r\n  }\r\n\r\n  return <div>\r\n      <TitleModal history={history} itemId={itemId} titleModalVisible={titleModalVisible} setTitleModalVisible={setTitleModalVisible} setAddingToDashboard={setAddingToDashboard} finalVizState={finalVizState} setTitle={setTitle} finalTitle={finalTitle} changePage = {props.changePage} />\r\n      <ExploreQueryBuilder vizState={finalVizState} setVizState={setVizState} chartExtra={[<Button key=\"button\" type=\"primary\" loading={addingToDashboard} onClick={() => setTitleModalVisible(true)}>\r\n            {itemId ? 'Update' : 'Add to Dashboard'}\r\n          </Button>]} />\r\n    </div>;\r\n};\r\nexport default withRouter(ExplorePage);","import React from 'react';\r\nimport RGL, { WidthProvider } from 'react-grid-layout';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport 'react-grid-layout/css/styles.css';\r\nimport 'react-resizable/css/styles.css';\r\nimport { GET_DASHBOARD_ITEMS } from '../graphql/queries';\r\nimport { UPDATE_DASHBOARD_ITEM } from '../graphql/mutations';\r\nconst ReactGridLayout = WidthProvider(RGL);\r\n\r\nconst Dashboard = ({\r\n  children,\r\n  dashboardItems\r\n}) => {\r\n  const [updateDashboardItem] = useMutation(UPDATE_DASHBOARD_ITEM, {\r\n    refetchQueries: [{\r\n      query: GET_DASHBOARD_ITEMS\r\n    }]\r\n  });\r\n\r\n  const onLayoutChange = newLayout => {\r\n    newLayout.forEach(l => {\r\n      const item = dashboardItems.find(i => i.id.toString() === l.i);\r\n      const toUpdate = JSON.stringify({\r\n        x: l.x,\r\n        y: l.y,\r\n        w: l.w,\r\n        h: l.h\r\n      });\r\n\r\n      if (item && toUpdate !== item.layout) {\r\n        updateDashboardItem({\r\n          variables: {\r\n            id: item.id,\r\n            input: {\r\n              layout: toUpdate\r\n            }\r\n          }\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  return <ReactGridLayout cols={48} rowHeight={5} onLayoutChange={onLayoutChange} style ={{margin:'0 8px'}}>\r\n      {children}\r\n    </ReactGridLayout>;\r\n};\r\n\r\nexport default Dashboard;","import React from 'react';\r\nimport { Card, Menu, Button, Dropdown, Modal } from 'antd';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { Link } from 'react-router-dom';\r\nimport { Icon } from '@ant-design/compatible';\r\nimport { GET_DASHBOARD_ITEMS } from '../graphql/queries';\r\nimport { DELETE_DASHBOARD_ITEM } from '../graphql/mutations';\r\nimport './DashboardItem.css'\r\n\r\nconst DashboardItemDropdown = ({\r\n  itemId, changePage, setItemId\r\n}) => {\r\n  const [removeDashboardItem] = useMutation(DELETE_DASHBOARD_ITEM, {\r\n    refetchQueries: [{\r\n      query: GET_DASHBOARD_ITEMS\r\n    }]\r\n  });\r\n\r\n\r\n  const dashboardItemDropdownMenu = <Menu>\r\n      <Menu.Item>\r\n        <Link  onClick = { (e) => {setItemId(itemId); changePage('explore')}}>Edit</Link>\r\n      </Menu.Item>\r\n      <Menu.Item onClick={() => Modal.confirm({\r\n      title: 'Are you sure you want to delete this item?',\r\n      okText: 'Yes',\r\n      okType: 'danger',\r\n      cancelText: 'No',\r\n\r\n      onOk() {\r\n        removeDashboardItem({\r\n          variables: {\r\n            id: itemId\r\n          }\r\n        });\r\n      }\r\n\r\n    })}>\r\n        Delete\r\n      </Menu.Item>\r\n    </Menu>;\r\n  return <Dropdown overlay={dashboardItemDropdownMenu} placement=\"bottomLeft\" trigger={['click']}>\r\n      <Button shape=\"circle\" size=\"small\"  icon={<Icon type=\"menu\" style={{fontSize:12}} />} />\r\n    </Dropdown>;\r\n};\r\n\r\nconst DashboardItem = ({\r\n  itemId,\r\n  children,\r\n  title,\r\n  changePage,\r\n  setItemId,\r\n}) => {   return <Card size=\"small\" title={<span style={{paddingTop:1, height: 100, padding:0, fontSize:15}}>{title}</span>} style={{\r\n  height: '100%',\r\n  width: '100%'\r\n}} bodyStyle={{\r\n  height: '90%',\r\n  width: '100%',\r\n}} extra={<DashboardItemDropdown itemId={itemId} changePage = {changePage} setItemId = {setItemId} />}>\r\n    <div style = {{height:'100%'}}>{children}</div>\r\n  </Card>}\r\n\r\nexport default DashboardItem;","import React from 'react';\r\nimport { Spin, Button, Alert, Row, Col, Breadcrumb } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { Icon } from '@ant-design/compatible';\r\nimport { GET_DASHBOARD_ITEMS } from '../graphql/queries';\r\nimport ChartRenderer from '../components/ChartRenderer';\r\nimport Dashboard from '../components/Dashboard';\r\nimport DashboardItem from '../components/DashboardItem';\r\n\r\nconst deserializeItem = i => ({ ...i,\r\n  layout: JSON.parse(i.layout) || {},\r\n  vizState: JSON.parse(i.vizState)\r\n});\r\n\r\nconst defaultLayout = i => ({\r\n  x: i.layout.x || 0,\r\n  y: i.layout.y || 0,\r\n  w: i.layout.w || 4,\r\n  h: i.layout.h || 4,\r\n  minW: 1,\r\n  minH: 1\r\n});\r\n\r\nconst DashboardPage = (props) => {\r\n  const {\r\n    loading,\r\n    error,\r\n    data\r\n  } = useQuery(GET_DASHBOARD_ITEMS);\r\n\r\n  if (loading) {\r\n    return <Spin />;\r\n  }\r\n\r\n  if (error) {\r\n    return <Alert message=\"Error occured while loading your query\" description={error.toString()} type=\"error\" />;\r\n  }\r\n\r\n  const dashboardItem = item => <div key={item.id} data-grid={defaultLayout(item)} style = {{height:500}}>\r\n      <DashboardItem key={item.id} itemId={item.id} title={item.name} changePage = {(e) => props.changePage('explore')} setItemId = {props.setItemId} >\r\n          <ChartRenderer vizState={item.vizState} />\r\n      </DashboardItem>\r\n    </div>;\r\n\r\n  const Empty = () => <div style={{\r\n    textAlign: 'center',\r\n    padding: 12\r\n  }}>\r\n      <h2>There are no charts on this dashboard</h2>\r\n      \r\n        <Button type=\"primary\" size=\"large\" icon={<Icon type=\"plus\" />} onClick = {(e) => props.changePage('explore')}>\r\n          Add chart\r\n        </Button>\r\n     \r\n    </div>\r\n\r\n  return (\r\n    <div>\r\n\r\n    <Row>\r\n    <Col span={20}>\r\n      <Breadcrumb style={{ margin: \"12px 0 0 0\" }}>\r\n        <Breadcrumb.Item><Link to =\"/\">Dashboards</Link></Breadcrumb.Item>\r\n        <Breadcrumb.Item>Data Explorer</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n    </Col>\r\n    <Col span = {4} style = {{paddingRight:8, paddingTop: 15}}>\r\n    </Col>\r\n  </Row>\r\n    <div>\r\n        {!data || data.dashboardItems.length ? <Dashboard dashboardItems={data && data.dashboardItems}>\r\n          {data && data.dashboardItems.map(deserializeItem).map(dashboardItem)}\r\n        </Dashboard> : <Empty />}\r\n    </div>\r\n\r\n    </div>\r\n\r\n  \r\n\r\n  )\r\n};\r\n\r\nexport default DashboardPage;","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux'\r\n// import { Breadcrumb } from 'antd';\r\n// import { Row, Col } from 'antd';\r\n// import \"./ErrorPage.css\";\r\n// import { Link } from 'react-router-dom';\r\nimport './body.css';\r\nimport 'antd/dist/antd.css';\r\nimport '@ant-design/compatible';\r\nimport { ApolloProvider } from '@apollo/react-hooks';\r\nimport { Layout } from 'antd';\r\nimport cubejs from '@cubejs-client/core';\r\nimport { CubeProvider } from '@cubejs-client/react';\r\nimport client from './graphql/client';\r\nimport Header from './components/Header';\r\nimport ExplorePage from './pages/ExplorePage';\r\nimport DashboardPage from './pages/DashboardPage';\r\nconst API_URL = \"/cube\";\r\nconst CUBEJS_TOKEN = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MTIxOTgzNzQsImV4cCI6MTYxMjI4NDc3NH0.h3yjKSRKJKQHGsS3FT_2amCWX8WjsGtuXwuJ9QeClgc\";\r\nconst cubejsApi = cubejs(CUBEJS_TOKEN, {\r\n  apiUrl: `${API_URL}/cubejs-api/v1`\r\n});\r\n\r\n\r\n// const AppLayout = ({\r\n//   children\r\n// }) => <Layout style={{\r\n//   height: '100%'\r\n// }}>\r\n//     <Header />\r\n//     <Layout.Content>{children}</Layout.Content>\r\n//   </Layout>;\r\n\r\n// const App = ({\r\n//   children\r\n// }) => <div>\r\n//   <CubeProvider cubejsApi={cubejsApi}>\r\n//     <ApolloProvider client={client}>\r\n//       <AppLayout>{children}</AppLayout>\r\n//     </ApolloProvider>\r\n//   </CubeProvider>;\r\n//   </div>\r\n\r\n\r\n\r\nclass CubeJs extends Component {\r\n\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            pageSelected:'dashboard',\r\n            itemId:null\r\n        }\r\n\r\n        this.changePage = this.changePage.bind(this)\r\n        this.setItemId = this.setItemId.bind(this)\r\n\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot){\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  changePage(pageSelected){\r\n    this.setState({ pageSelected: pageSelected });\r\n   }\r\n\r\n  setItemId(itemId){\r\n    this.setState({ itemId: itemId });\r\n  }\r\n\r\n\r\n    render(){\r\n\r\n\r\n        return (\r\n            <div>\r\n\r\n                \r\n                <CubeProvider cubejsApi={cubejsApi}>\r\n                    <ApolloProvider client={client}>\r\n                    \r\n                    \r\n                    <Header changePage = {(e) => this.changePage(e)} pageSelected = {this.state.pageSelected}  setItemId = {(e) => this.setItemId(e) } />\r\n\r\n                    { this.state.pageSelected == 'dashboard' ?  <DashboardPage changePage = {(e) => this.changePage(e)} setItemId = {(e) => this.setItemId(e)} itemId = {this.state.itemId}/> : <ExplorePage changePage = {(e) => this.changePage(e)} setItemId = {(e) => this.setItemId(e)} itemId = {this.state.itemId}/>}\r\n\r\n\r\n                    </ApolloProvider>\r\n                </CubeProvider>\r\n\r\n            </div>\r\n\r\n    \r\n        )\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n        return{\r\n            // getExampleName: (name) => dispatch(getExampleName(name))\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CubeJs)                    ","import React, {Component} from 'react';\nimport { HashRouter, Route, useHistory} from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport 'antd/dist/antd.css';\nimport { Layout, Spin } from 'antd';\nimport \"./index.css\";\nimport Dashboards from './containers/Dashboards/Dashboards.js';\nimport { AnimatedSwitch } from 'react-router-transition';\nimport Sidebar from './containers/Sidebar/Sidebar';\nimport CustomerAudit from './containers/CustomerAudit/CustomerAudit';\nimport TestContainer from './containers/TestContainer/TestContainer';\nimport AnimalProfile from './containers/AnimalProfile/AnimalProfile';\nimport CubeJs from './containers/CubeJs/CubeJs';\n\n\n\n\n\n\nconst { Header, Content } = Layout;\n\n\n\nclass App extends Component {\n\n  constructor(props){\n    super(props)\n\n    this.state = {\n      \n    };\n\n}\n\ncomponentDidMount(){\n\n  // this.props.getAcceptedGroups()\n\n}\n\ncomponentDidUpdate(prevProps, prevState, snapshot){\n      // if (prevProps.acceptedGroups !== this.props.acceptedGroups) {\n      //   this.props.appLog(authProvider.account.userName, 'login')\n      //   checkGroup(this, this.props.acceptedGroups)\n      // }\n  \n\n}\n\n\n\n  \nrender(){\n\n\n    return (\n        <HashRouter onChange = {this.test} >\n\n        <div className = 'app-background' id ='App'>\n\n                    <Layout style={{ minHeight: \"100vh\" }}>\n                      <Sidebar user  = {'test'}/>\n                      <Layout style={{  }}>\n                        <Header className = 'header-main'>\n                          <h2 style = {{color:\"#F3F2F1\" ,fontSize:22}}>Animal Friends Volunteering</h2>\n                        </Header>\n                        <Content style={{ padding: \"0 16px\", position: 'relative', overflowY:'auto'}}>\n                            <AnimatedSwitch\n                              // atEnter={{ offset: -100 }}\n                              // atLeave={{ offset: 0 }}\n                              // atActive={{ offset: 0 }}\n                              // mapStyles={(styles) => ({\n                              //   transform: `translateX(${styles.offset}%)`,\n                              // })}\n                              atEnter={{ opacity: 0 }}\n                              atLeave={{ opacity: 0 }}\n                              atActive={{ opacity: 1 }}\n                              className=\"switch-wrapper\"\n                            >\n                              <Route exact path='/' component={Dashboards} />\n                              <Route exact path='/shelterluv' component={CustomerAudit}/>\n                              <Route exact path='/test' component={TestContainer}/>\n                              <Route exact path='/animalprofile' component={AnimalProfile} /> \n                              <Route exact path='/cubejs' component={CubeJs}/>\n                            \n                            </AnimatedSwitch>\n                        </Content>\n                        \n                      </Layout>\n                    </Layout>\n\n              \n        </div>\n      </HashRouter>\n\n    ); \n\n\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    // isTeams:state.auth.isTeams,\n    // auth:state.auth.authGroups,\n    // acceptedGroups:state.auth.acceptedGroups,\n    dashboards: state.dashboards.dashboards,\n    // acceptedDashboards: state.dashboards.acceptedDashboards,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return{\n    // authenticateUser: (value) => dispatch(authenticateUser(value)),\n    // getAcceptedGroups: () => dispatch(getAcceptedGroups()),\n    // getDashboards: (groups,query) => dispatch(getDashboards(groups, query)),\n    // appLog: (user,type) => dispatch(appLog(user,type)),\n      \n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nconst initState = {\n    exampleUser: 'Testing@Mckesson.com',\n    name:'',\n    exampleData:'',\n    \n}\n\n\n\n\nconst exampleReducer = (state = initState, action) => {\n\n    console.log(action)\n\n    switch(action.type){\n        case 'UPDATE_DATA':\n                return Object.assign({}, state, {\n                    ...state,\n                    exampleData:action.data,\n\n                })\n        case 'UPDATE_EXAMPLE_NAME':\n            return Object.assign({}, state, {\n                ...state,\n                name:action.data,\n\n            })\n\n    default: return state\n\n    }\n\n}\n\nexport default exampleReducer","import moment, { isMoment } from 'moment';\nconst initState = {\n    dates: [moment().add('month', -1),moment().add('day', -1)],\n    applyFilter: true,\n    dailyReportTable:'',\n    dailyReportBarChart:'',\n}\n\n\n\n\nconst customerAuditReducer = (state = initState, action) => {\n\n    switch(action.type){\n        case 'SL_CLEAR_DATA':\n            return Object.assign({}, state, {\n                ...state,\n            })\n        case 'SL_GET_DAILY_REPORT_TABLE':\n            return Object.assign({}, state, {\n                ...state,\n                dailyReportTable:action.data,\n            })\n        case 'SL_GET_DAILY_REPORT_BAR_CHART':\n            return Object.assign({}, state, {\n                ...state,\n                dailyReportBarChart:action.data,\n            })\n        case 'SL_ON_DATE_CHANGE':\n            return Object.assign({}, state, {\n                ...state,\n                dates:action.data,\n            })\n    \n\n\n    default: return state\n\n    }\n\n}\n\nexport default customerAuditReducer","const initState = {\n    authGroups: null,\n    acceptedGroups: '',\n    user:'',\n    isTeams: ((((window.location.href).split('#').pop().substring(0,7)) == '/teams/') ? false:true)\n}\n\n\n\n\nconst authReducer = (state = initState, action) => {\n\n    switch(action.type){\n        case 'AUTH_USER':\n                return Object.assign({}, state, {\n                    ...state,\n                    authGroups:action.data,\n\n                })\n        case 'GET_ACCEPTED_GROUPS':\n            return Object.assign({}, state, {\n                ...state,\n                acceptedGroups:action.data,\n\n            })\n        case 'APP_LOG':\n            return Object.assign({}, state, {\n                ...state,\n                user:action.data,\n\n            })\n\n\n\n    default: return state\n\n    }\n\n}\n\nexport default authReducer","const initState = {\n    dashboards: null,\n    acceptedDashboards:[],\n    notifications:'',\n}\n\n\n\n\nconst dashboardReducer = (state = initState, action) => {\n\n    switch(action.type){\n        case 'GET_DASHBOARDS':\n                return Object.assign({}, state, {\n                    ...state,\n                    dashboards:action.data[0],\n                    acceptedDashboards:action.data[1]\n                })\n        case 'GET_NOTIFICATIONS':\n            return Object.assign({}, state, {\n                ...state,\n                notifications:action.data,\n            })\n        case 'SET_NOTIFICATIONS':\n            return Object.assign({}, state, {\n                ...state,\n                notifications:action.data,\n            })\n        case 'DISMISS_ALL_NOTIFICATIONS':\n            return Object.assign({}, state, {\n                ...state,\n                notifications:'',\n            })\n\n            \n\n\n\n    default: return state\n\n    }\n\n}\n\nexport default dashboardReducer","import moment, { isMoment } from 'moment';\nconst initState = {\n    dates: [moment().add('month', -1),moment().add('day', -1)],\n    applyFilter: true,\n    apAnimals:'',\n    apNotes:'',\n    apEvents:'',\n}\n\n\n\n\nconst animalProfileReducer = (state = initState, action) => {\n\n    switch(action.type){\n        case 'AP_CLEAR_DATA':\n            return Object.assign({}, state, {\n                ...state,\n            })\n        case 'AP_ON_DATE_CHANGE':\n            return Object.assign({}, state, {\n                ...state,\n                dates:action.data,\n            })\n        case 'AP_GET_ANIMALS':\n            return Object.assign({}, state, {\n                ...state,\n                apAnimals:action.data,\n            })\n        case 'AP_GET_NOTES':\n            return Object.assign({}, state, {\n                ...state,\n                apNotes:action.data,\n            })\n        case 'AP_GET_EVENTS':\n            return Object.assign({}, state, {\n                ...state,\n                apEvents:action.data,\n            })\n    \n\n\n    default: return state\n\n    }\n\n}\n\nexport default animalProfileReducer","\nimport {combineReducers} from 'redux'\nimport exampleReducer from './exampleReducer'\nimport customerAuditReducer from './customerAuditReducer'\nimport authReducer from './authReducer'\nimport dashboardReducer from './dashboardReducer'\nimport animalProfileReducer from './animalProfileReducer'\n\n\nconst appReducer = combineReducers({\n    exampleReducer: exampleReducer,\n    auth: authReducer,\n    dashboards: dashboardReducer,\n    customeraudit:customerAuditReducer,\n    animalprofile:animalProfileReducer\n })\n \n  const rootReducer = (state, action) => {\n   return appReducer(state, action)\n }\n\n export default rootReducer;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport rootReducer from './store/reducers/rootReducer.js'\nimport ReduxThunk from 'redux-thunk'\n\n//redux thunk is middleware\n\nconst store = createStore(rootReducer, applyMiddleware(ReduxThunk))\n\nReactDOM.render(\n<Provider store = {store}>\n    \n    <App />\n\n</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","var map = {\n\t\"./animalprofile.PNG\": 847,\n\t\"./cubejs.PNG\": 848,\n\t\"./shelterluv.PNG\": 849\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 846;","module.exports = __webpack_public_path__ + \"static/media/animalprofile.61bf76ff.PNG\";","module.exports = __webpack_public_path__ + \"static/media/cubejs.61bf76ff.PNG\";","module.exports = __webpack_public_path__ + \"static/media/shelterluv.7500906a.PNG\";"],"sourceRoot":""}