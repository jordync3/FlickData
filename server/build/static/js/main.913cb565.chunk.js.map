{"version":3,"sources":["containers/Dashboards sync /^/.*/.PNG$","containers/Dashboards/shelterluv.PNG","authProvider.js","store/actions/AuthActions.js","store/actions/DashboardActions.js","components/Dashboards/dashSearcher.js","components/Dashboards/dashboardCards.js","components/Dashboards/notificationCards.js","components/Dashboards/notificationBell.js","containers/Dashboards/Dashboards.js","containers/Sidebar/Sidebar.js","store/actions/SidebarActions.js","components/CustomerAudit/dailyReportTable.js","components/CustomerAudit/dateTypeSelector.js","components/CustomerAudit/dailyReportBarchart.js","containers/CustomerAudit/CustomerAudit.js","store/actions/customerAuditActions.js","App.js","serviceWorker.js","store/reducers/exampleReducer.js","store/reducers/customerAuditReducer.js","store/reducers/authReducer.js","store/reducers/dashboardReducer.js","store/reducers/rootReducer.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","options","loginType","LoginType","Redirect","tokenRefreshUri","window","location","origin","requestObj","scopes","authProvider","MsalAuthProvider","auth","authority","clientId","cache","cacheLocation","storeAuthStateInCookie","appLog","user","type","dispatch","axios","post","then","res","data","getDashboards","groups","query","acceptedDashbords","i","push","dashboard","DashSearcher","props","onChange","value","setState","state","onSelect","bind","one","two","className","style","width","this","filterOption","inputValue","option","testq","placeholder","allowClear","Component","connect","Meta","Card","dashboardCards","image","console","log","require","error","to","onClick","account","userName","hoverable","background","cover","backgroundImage","title","description","fontStyle","minHeight","notificationCards","message","notifications","showIcon","action","size","closable","onClose","uid","NotificationBell","showDrawer","visible","toggleDrawer","prevState","onNotificationClose","notificationCount","closeNotification","length","getNotifications","acceptedDashboards","prevProps","snapshot","placement","bodyStyle","padding","getContainer","position","mask","dismissAllNotifications","float","marginLeft","paddingTop","paddingRight","count","BellOutlined","Dashboards","dashboards","setNotifications","span","margin","Item","paddingLeft","paddingBottom","marginTop","marginRight","fontSize","overflowY","height","authGroups","Sider","Layout","Sidebar","onCollapse","collapsed","tab","changeTab","menu","logout","key","collapsible","collapsedWidth","overlay","CaretDownOutlined","name","CaretUpOutlined","theme","defaultSelectedKeys","pathname","substring","mode","LayoutOutlined","textAlign","changeTabOnStart","DailyReportTable","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","ref","node","searchInput","target","onPressEnter","handleSearch","marginBottom","display","icon","handleReset","filterIcon","filtered","SearchOutlined","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","setTimeout","select","render","text","searchedColumn","highlightStyle","backgroundColor","searchWords","searchText","autoEscape","textToHighlight","rowId","columns","sorter","compare","a","b","moment","unix","multiple","Name","localeCompare","Species","Breed","Age","Sex","Status","OutcomeType","OUTCOME","dataSource","pagination","pageSize","loading","RangePicker","DatePicker","monthFormat","Select","Option","PickerWithType","defaultValue","dates","format","customeraudit","onDateChange","useEffect","ResponsiveContainer","BarChart","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Bar","stackId","fill","CustomerAudit","changes","showLoadingModal","loadingModal","handleLoadingOk","handleLoadingCancel","downloadSIS","dailyReportTable","SISWS","XLSX","utils","json_to_sheet","wb","book_new","book_append_sheet","writeFile","bookType","bookSST","compression","add","handleFilterApply","getDailyReportTable","getDailyReportBarChart","clearData","ms","Promise","sleep","apply","handleApplyFilter","val","num","num_parts","split","replace","join","input","arr","obj","tileData","getItems","onChangeType","disabled","onOk","onCancel","footer","href","SettingOutlined","FileAddOutlined","loadingCheck","faDog","Intake","faCat","Outcome","faHome","Foster","dailyReportBarChart","Header","Content","App","getAcceptedGroups","acceptedGroups","callGraphAPI","tokenResponse","get","headers","accessToken","resGroups","result","filter","indexOf","authenticateUser","groupID","acquireTokenSilent","tokenResponseSilent","catch","acquireTokenRedirect","tokenResponsePopup","checkGroup","test","provider","forceLogin","login","authenticationState","accountInfo","AuthenticationState","Authenticated","isTeams","atEnter","opacity","atLeave","atActive","exact","path","component","Unauthenticated","InProgress","Boolean","hostname","match","initState","exampleUser","exampleData","exampleReducer","assign","applyFilter","customerAuditReducer","pop","authReducer","dashboardReducer","appReducer","combineReducers","rootReducer","store","createStore","applyMiddleware","ReduxThunk","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.913cb565.chunk.js","sourcesContent":["var map = {\n\t\"./shelterluv.PNG\": 475\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 474;","module.exports = __webpack_public_path__ + \"static/media/shelterluv.7500906a.PNG\";","// authProvider.js\nimport { MsalAuthProvider,LoginType} from 'react-aad-msal';\nimport axios from 'axios'\n \n// Msal Configurations\nconst config = {\n  auth: {\n    authority: 'https://login.microsoftonline.com/86764182-be39-4542-bd94-2edd81da63cc',\n    clientId: '02c3f1d9-7c0e-4e0f-9834-964e496e59af',\n    // redirectUri: 'localhost:3000'\n  },\n  cache: {\n    cacheLocation: \"localStorage\",\n    storeAuthStateInCookie: true\n  },\n\n};\n \n// Authentication Parameters\n// const authenticationParameters = {\n//   scopes: [\n//     '<property (user.read)>',\n//     'https://da67ef1b-ca59-4db2-9a8c-aa8d94617a16.onmicrosoft.com/ff8b6d58-361a-4b4b-b38c-5d2d91f46ed0/User.Read.All',\n//   ]\n// }\n \n// Options\nconst options = {\n  loginType: LoginType.Redirect,\n  tokenRefreshUri: window.location.origin\n}\n \n\nvar requestObj = {\n  scopes: [\"user.read\"]\n};\n\n\n\n\nexport const authProvider = new MsalAuthProvider(config,null, options)\n\n\n\n// function union_arrays (x, y) {\n//   var obj = {};\n//   for (var i = x.length-1; i >= 0; -- i)\n//      obj[x[i]] = x[i];\n//   for (var i = y.length-1; i >= 0; -- i)\n//      obj[y[i]] = y[i];\n//   var res = []\n//   for (var k in obj) {\n//     if (obj.hasOwnProperty(k))  // <-- optional\n//       res.push(obj[k]);\n//   }\n//   return res;\n// }\n\n\n\nexport const checkGroup = (value, groups) => {\n\n  const callGraphAPI = (tokenResponse) =>{\n\n      axios.get(\n        'https://graph.microsoft.com/v1.0/me/memberOf?$top=999', // need to loop in case of over 999 groups\n        { headers: {\"Authorization\": `Bearer ${tokenResponse.accessToken}` }}\n      ).then(res => {\n\n        for(var i in res.data.value){\n          resGroups.push(res.data.value[i].id)\n\n        }\n      \n      result = acceptedGroups.filter(function(val) {  //looks for duplicate IDs\n        return resGroups.indexOf(val) !== -1;\n      });\n\n        if(result.length > 0){ //checks to see if is in any accepted groups\n          value.props.authenticateUser(result)\n          value.props.getDashboards(result)\n        }\n        else{\n          \n        }\n\n      }); \n  }\n\n  var acceptedGroups = [   //list of accepted groups\n    \n  ]\n\n  for(var i in groups){\n    acceptedGroups.push(groups[i].groupID)\n  }\n\n\n  var resGroups = []\n\n  var result  = []\n\n\n  \n\n  authProvider.acquireTokenSilent(requestObj).then(function (tokenResponseSilent) {\n\n    callGraphAPI(tokenResponseSilent)\n    \n  }).catch(function (error) {\n      authProvider.acquireTokenRedirect(requestObj).then(function (tokenResponsePopup) {\n\n        callGraphAPI(tokenResponsePopup)\n        \n      }).catch(function (error) {\n          console.log(error);\n      });\n  });\n}","import axios from 'axios'\n\n\n\nexport const authenticateUser = (value) => {\n  return (dispatch) => {\n\n      dispatch({\n          type: 'AUTH_USER',\n          data: value\n    })\n  }\n}\n\n\nexport const getAcceptedGroups = () => {\n  return (dispatch) => {\n\n    axios.post('/dashboards/getAcceptedGroups', {\n      \n    }).then(res => {\n\n      console.log(res.data)\n\n        dispatch({\n            type: 'GET_ACCEPTED_GROUPS',\n            data: res.data\n        })\n    })\n  }\n}\n\nexport const appLog = (user,type) => {\n\n  return (dispatch) => {\n\n     \n    axios.post('/dashboards/appLog', {\n      user:user,\n      type:type\n    }).then(res => {\n\n        \n        dispatch({\n            type: 'APP_LOG',\n            data: user\n        })\n    })\n  }\n}\n\n\n\n\n\n\n    \n","import axios from 'axios'\n\n\nexport const getDashboards = (groups, query) => {\n  return (dispatch) => {\n\n\n    axios.post('/dashboards/getDashboards', {\n      groups:groups,\n      query:query\n    }).then(res => {\n\n      var acceptedDashbords = []\n\n\n      for(var i in res.data){ // creates a list of the accepted dashboards and then only allows the routes to be accessed if in array\n        acceptedDashbords.push(res.data[i].dashboard)\n      }\n         \n\n        dispatch({\n            type: 'GET_DASHBOARDS',\n            data: [res.data, acceptedDashbords]\n        })\n    })\n  }\n}\n\nexport const getNotifications = (user, acceptedDashboards) => {\n  return (dispatch) => {\n\n    axios.post('/dashboards/getNotifications', {\n      user:user,\n      acceptedDashboards:acceptedDashboards\n    }).then(res => {\n\n        dispatch({\n            type: 'GET_NOTIFICATIONS',\n            data: res.data\n        })\n    })\n  }\n}\n\nexport const dismissAllNotifications = (user, acceptedDashboards) => {\n  return (dispatch) => {\n\n    axios.post('/dashboards/dismissAllNotifications', {\n      user:user,\n      acceptedDashboards:acceptedDashboards\n    }).then(res => {\n\n        dispatch({\n            type: 'DISMISS_ALL_NOTIFICATIONS',\n            data: res.data\n        })\n    })\n  }\n}\n\n\n\nexport const closeNotification = (user, uid) => {\n  return (dispatch) => {\n\n    axios.post('/dashboards/closeNotification', {\n      user:user,\n      uid:uid\n    }).then(res => {\n\n        dispatch({\n            type: 'CLOSE_NOTIFICATION',\n            data: 'Closed!'\n        })\n    })\n  }\n}\n\nexport const setNotifications = (data) => {\n  return (dispatch) => {\n\n        dispatch({\n            type: 'SET_NOTIFICATIONS',\n            data: data\n        })\n  }\n}\n\n\n\n// export const getExampleName = (name) => {\n//   return (dispatch) => {\n\n//       dispatch({\n//           type: 'UPDATE_EXAMPLE_NAME',\n//           data: name\n//     })\n//   }\n// }\n\n\n\n\n\n\n    \n","import { AutoComplete } from 'antd';\nimport React, {Component} from 'react';\nimport { connect } from 'react-redux'\n\n\n\n\n\nclass DashSearcher extends Component {\n\n\n  constructor(props){\n      super(props)\n\n      this.state = {\n        value:props.value\n      }\n\n      this.onSelect = this.onSelect.bind(this)\n     \n  }\n\n\n\n  // onSearch = searchText => {\n  //   this.setState({\n  //     dataSource: !searchText ? [] : [searchText, searchText.repeat(2), searchText.repeat(3)],\n  //   });\n  // };\n  \n\n  onChange = value => {\n    this.setState({ value });\n    this.props.getDashboards(this.props.groups, value)\n  };\n\n  onSelect(value) {\n    \n  }\n  testq(one, two){\n\n  }\n\n\n  render() {\n\n    \n    return (\n      <div>\n        <AutoComplete\n         className = {'mobile-friendly-cards'}\n          style={{ width: 300 }}\n          onSelect={this.onSelect}\n          onChange={this.onChange}\n          value={this.state.value}\n          filterOption={(inputValue, option) =>\n            this.testq(inputValue, option)\n            // option.props.children.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\n          }\n          placeholder=\"\"\n          allowClear= {true}\n          \n        />\n      </div>\n    );\n  }\n\n\n\n\n}\n\nconst mapStateToProps = (state) => {\n  return{\n      \n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n      return{\n        \n      }\n  }\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DashSearcher)","import React from 'react'\nimport {  Card } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { authProvider } from '../../authProvider';\nconst { Meta } = Card;\n\n\n\n\n\nconst dashboardCards = (props) => {\n\n    var image\n\n    console.log(props.dashboard)\n\n    try {\n        image = require('../../containers/Dashboards/'+props.dashboard+'.PNG')\n    } catch (error) {\n        console.log(error)\n    }\n    \n    \n\n    return (\n\n        <Link to={\"/\"+props.dashboard+\"\"} onClick={() => props.appLog(authProvider.account.userName, props.dashboard)}>\n            <Card\n            className = 'dashboard-card mobile-friendly-cards'\n            hoverable\n            style={{ width: 290, background:\"whitesmoke\"}}\n            cover={<div style = {{ backgroundImage: `url(${image})`}} className = \"title-card\"> </div>}\n            >\n            <Meta className = \"title-meta\" title={props.title} description={<div style = {{fontStyle: 'italic', minHeight:90}}>{props.description}</div>} ></Meta>\n        </Card> \n        </Link>\n\n    )\n     \n    }\n    \n    export default dashboardCards","import React from 'react'\nimport {  Card } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { authProvider } from '../../authProvider';\nimport { Button, notification, Alert } from 'antd';\n\nconst { Meta } = Card;\n\nconst openNotification = () => {\n  const args = {\n    message: 'Notification Title',\n    description:\n      'I will never close automatically. This is a purposely very very long description that has many many characters and words.',\n    duration: 0,\n  };\n  notification.open(args);\n};\n\n\n\n\nconst notificationCards = (props) => {\n\n\n    return (\n\n        // <Link to={\"/\"+props.dashboard+\"\"} onClick={() => props.appLog(authProvider.account.userName, props.dashboard)}>\n           <Alert\n                message={props.notifications.title}\n                showIcon\n                description={props.notifications.description}\n                type={props.notifications.type}\n                style ={{minHeight:110}}\n                action={ props.notifications.dashboard != 'csr' ?\n                    <Link to={\"/\"+props.notifications.dashboard+\"\"} onClick={() => props.appLog(authProvider.account.userName, props.notifications.dashboard)}>\n                        <Button size=\"small\" type=\"text\" >\n                        Details\n                        </Button>\n                    </Link> : ''\n                }\n                closable\n                onClose = {() => props.onClose(props.user, props.notifications.uid)}\n                />\n        // {/* </Link> */}\n\n    )\n     \n    }\n    \n    export default notificationCards","import { Drawer ,Badge, Button, Space} from 'antd';\nimport React, {Component} from 'react';\nimport { connect } from 'react-redux'\nimport { getNotifications, closeNotification, setNotifications, dismissAllNotifications } from '../../store/actions/DashboardActions.js'\nimport NotificationCards from '../../components/Dashboards/notificationCards.js';\nimport { BellOutlined } from '@ant-design/icons';\nimport { appLog } from '../../store/actions/AuthActions.js';\n\n\nclass NotificationBell extends Component {\n\n  constructor(props){\n    super(props)\n\n    this.state = {\n      visible: false,\n      notificationCount: this.props.notifications.length\n\n    }\n\n\n}\n\n\ncomponentDidMount(){\n  this.props.getNotifications(this.props.user, this.props.acceptedDashboards)\n\n}\n\ncomponentDidUpdate(prevProps, prevState, snapshot){\n  if (prevProps.notifications !== this.props.notifications) {\n    this.setState({ notificationCount: this.props.notifications.length });\n  }\n  if (prevProps.acceptedDashboards !== this.props.acceptedDashboards) {\n    this.props.getNotifications(this.props.user, this.props.acceptedDashboards)\n  }\n}\n\nshowDrawer = () => {\n  this.setState({\n  visible: true,\n  });\n};\n\ntoggleDrawer = () => {\n    this.setState(prevState => ({\n    visible: !prevState.visible\n    }));\n}\n\nonClose = () => {\n    this.setState({\n    visible: false,\n    });\n};\n\nonNotificationClose = (user,uid) => {\n\n  this.setState({ notificationCount: this.state.notificationCount-1 });\n\n  this.props.closeNotification(user,uid);\n}\n\n\n\n\n\n  render() {\n\n    var notifications = []\n\n    for(var i in this.props.notifications){\n      notifications.push(<NotificationCards  appLog = {this.props.appLog} notifications = {this.props.notifications[i]} user = {this.props.user} onClose = {this.onNotificationClose}/>)\n    }\n\n\n    return (\n      <div>\n\n\n      <Drawer\n      title=\"Notifications\"\n      placement=\"right\"\n      closable={true}\n      bodyStyle = {{padding:'0 0 0 0'}}\n      onClose={this.onClose}\n      visible={this.state.visible}\n      width= {400}\n      getContainer={false}\n      style={{ position: 'fixed' }}\n      mask={false}\n      // extra={\n      //   <Space>\n      //     <Button onClick={this.props.dismissAllNotifications(this.props.user, this.props.acceptedDashboards)}>Cancel</Button>\n      //   </Space> \n      // }\n      >\n          <Button style = {{width:'100%'}} onClick = {()=> {this.props.dismissAllNotifications(this.props.user, this.props.acceptedDashboards)}}>Dismiss All Notifications</Button>\n      {notifications}\n      </Drawer>\n        <div style = {{float:'right', marginLeft:10, paddingTop:3, paddingRight:12}}>\n          <Badge count={this.state.notificationCount}>\n              <BellOutlined className = 'settingsIcon' style = {{float:'right'}} size='large' onClick={this.toggleDrawer} />\n          </Badge>\n        </div>\n        </div>\n    \n    )\n    \n    \n  }\n\n\n}\n\nconst mapStateToProps = (state) => {\n  return{\n    notifications: state.dashboards.notifications,\n    user:state.auth.user,\n    acceptedDashboards: state.dashboards.acceptedDashboards,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n      return{\n        getNotifications: (user, acceptedDashboards) => dispatch(getNotifications(user, acceptedDashboards)),\n        closeNotification: (user, uid) => dispatch(closeNotification(user, uid)),\n        setNotifications: (data) => dispatch(setNotifications(data)),\n        dismissAllNotifications: (user, acceptedDashboards) => dispatch(dismissAllNotifications(user, acceptedDashboards)),\n        appLog: (user,type) => dispatch(appLog(user,type)),\n      }\n  }\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NotificationBell)","import React, {Component} from 'react';\nimport { connect } from 'react-redux'\nimport { Breadcrumb, Drawer } from 'antd';\nimport DashSearcher from '../../components/Dashboards/dashSearcher.js'\nimport { Row, Col, Badge } from 'antd';\nimport \"./Dashboards.css\";\nimport { getDashboards, getNotifications, closeNotification, setNotifications } from '../../store/actions/DashboardActions.js'\nimport DashboardCards from '../../components/Dashboards/dashboardCards.js';\nimport NotificationCards from '../../components/Dashboards/notificationCards.js';\nimport { appLog } from '../../store/actions/AuthActions.js';\nimport { SettingOutlined, FileAddOutlined, BellOutlined } from '@ant-design/icons';\nimport NotificationBell from '../../components/Dashboards/notificationBell.js';\n\n\n\nclass Dashboards extends Component {\n\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n          visible: false,\n        }\n\n\n    }\n\n\n    componentDidMount(){\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot){\n    }\n\n    // showDrawer = () => {\n    //   this.setState({\n    //   visible: true,\n    //   });\n    // };\n    \n    // toggleDrawer = () => {\n    //     this.setState(prevState => ({\n    //     visible: !prevState.visible\n    //     }));\n    // }\n    \n    // onClose = () => {\n    //     this.setState({\n    //     visible: false,\n    //     });\n    // };\n    \n    // onNotificationClose = (user,uid) => {\n\n    //   this.setState({ notificationCount: this.state.notificationCount-1 });\n\n    //   this.props.closeNotification(user,uid);\n    // }\n\n\n\n\n\n    render(){\n\n\n      var dashboards = []\n\n      for(var i in this.props.dashboards){\n        if(this.props.dashboards[i].dashboard != 'csr'){ //this exclusion is for alerts that dont have dashboards\n          dashboards.push(<DashboardCards dashboard = {this.props.dashboards[i].dashboard} title ={this.props.dashboards[i].title} description = {this.props.dashboards[i].description } appLog = {this.props.appLog}/>)\n        }\n      }\n\n      \n        return (\n            <div>\n\n                {/* <Drawer\n                title=\"Notifications\"\n                placement=\"right\"\n                closable={true}\n                bodyStyle = {{padding:'0 0 0 0'}}\n                onClose={this.onClose}\n                visible={this.state.visible}\n                width= {400}\n                getContainer={false}\n                style={{ position: 'fixed' }}\n                mask={false}\n                >\n                {notifications}\n                </Drawer> */}\n\n\n               <Col span = {24}>\n                {/* <NotificationBell/> */}\n               \n                <Breadcrumb style={{ margin: \"12px 0\" }}>\n                  <Breadcrumb.Item>Dashboards</Breadcrumb.Item>\n                </Breadcrumb>\n                </Col>\n                <Row>\n                  <Col span= {24}>\n                    <div className = 'mobile-friendly' style={{ paddingTop:15, paddingLeft:35 , paddingBottom:20,  background:\"#fff\"}}>\n                      <div style = {{float:\"left\", marginTop:5, marginRight:15, fontSize:16}}>\n                        Search Dashboards: </div>\n                        <DashSearcher  groups={this.props.groups} getDashboards= {this.props.getDashboards}/>\n                      </div>\n                    \n                  </Col>\n                </Row>\n                <div style={{ overflowY:\"auto\",paddingLeft:15, paddingRight:15, marginTop:0 ,height:775,  background:\"#fff\"}}>\n                  <Row>\n                    {dashboards}\n\n                    {/* <Link to=\"/drugSearch\">\n                        <Card\n                        className = 'dashboard-card'\n                          hoverable\n                          style={{ width: 290, background:\"whitesmoke\"}}\n                          cover={<div className = \"title-card\"> </div>}\n                        >\n                          <Meta className = \"title-meta\" title=\"Drug Search\" description=\"Search by Drug\" ></Meta>\n                      </Card> \n                    </Link>\n                    <Link to=\"/manufacturerSearch\">\n                        <Card\n                        className = 'dashboard-card'\n                          hoverable\n                          style={{ width: 290, background:\"whitesmoke\"}}\n                          cover={<div className = \"title-card\"> </div>}\n                        >\n                          <Meta className = \"title-meta\" title=\"Manufacturer Search\" description=\"Search by Manufacturer\" ></Meta>\n                      </Card> \n                    </Link> */}\n                  </Row>\n                  </div>\n            </div>\n\n    \n        )\n\n    }\n\n\n}\n\nconst mapStateToProps = (state) => {\n    return{\n        groups:state.auth.authGroups,\n        user:state.auth.user,\n        dashboards:state.dashboards.dashboards,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n        return{\n            getDashboards: (groups,query) => dispatch(getDashboards(groups, query)),\n            appLog: (user,type) => dispatch(appLog(user,type)),\n        }\n    }\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboards)                    ","import React, {Component} from 'react'\nimport { connect } from 'react-redux'\nimport './Sidebar.css'\nimport { changeTab,changeTabOnStart  } from '../../store/actions/SidebarActions.js'\nimport {  Dropdown, } from 'antd';\nimport { Link } from 'react-router-dom'\nimport { Layout, Menu } from 'antd';\nimport { CaretUpOutlined, CaretDownOutlined, TeamOutlined, LayoutOutlined } from '@ant-design/icons';\n\n\n\nconst { Sider } = Layout;\n\n\nclass Sidebar extends Component {\n\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n            collapsed: true,\n        }\n\n\n    }\n\n\n    componentDidMount(){\n\n        \n    }\n\n\n    changeTab(e, tab){\n        this.props.changeTab(tab)\n\n    }\n\n    \n    onCollapse = collapsed => {\n        this.setState({ collapsed });\n      };\n\n\n\n    render(){\n\n        const menu = (\n            <Menu >\n              <Menu.Item onClick = {this.props.logout} key=\"1\">Logout</Menu.Item>\n            </Menu>\n          );\n\n        return (\n\n            <Sider\n                collapsible\n                collapsed={this.state.collapsed}\n                onCollapse={this.onCollapse}\n                className = 'sidebar-main mobile-friendly-none'\n                collapsedWidth = '70px'\n                width ='175px'\n            >   \n                <div className=\"logo\" >\n                <div className = 'sidebar-circle'>\n                \n                </div>\n                <div className = 'sidebar-user'>\n\n                <Dropdown overlay={menu}>\n                <div className=\"ant-dropdown-link sidebarMenu\" >\n                    { !this.state.collapsed ? <div>{this.props.user.account.name} <CaretUpOutlined /> </div> : <CaretDownOutlined /> } \n                </div>\n                </Dropdown>\n                </div>\n                </div>\n                <Menu theme=\"dark\" defaultSelectedKeys={[window.location.pathname.substring(1) ? window.location.pathname.substring(1) : \"Dashboards\"]} mode=\"inline\" className ='sidebar-item' >\n                <Menu.Item key=\"Dashboards\" className = 'sidebar-item-inner'>\n                    <Link to=\"/\">\n                    <LayoutOutlined style={{marginLeft:26}} />    \n                    <span style ={{textAlign:'center'}}>Dashboards</span>\n                    </Link>\n\n                </Menu.Item>\n                {/* <Menu.Item key=\"drugSearch\" >\n                    <Link to=\"/drugSearch\">\n                    <Icon type=\"pie-chart\" />\n                    <span>Drug Search</span>\n                    </Link>\n                    \n                </Menu.Item>\n                <Menu.Item key=\"manufacturerSearch\">\n                    <Link to=\"/manufacturerSearch\">\n                    <Icon type=\"desktop\" />\n                    <span>Manufacturer Search</span>\n                    </Link>\n                </Menu.Item> */}\n                </Menu>\n            </Sider>\n\n            \n    \n        )\n\n    }\n\n\n}\n\nconst mapStateToProps = (state) => {\n    return{\n        // currentTab: state.sidebar.currentTab,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n        return{\n            changeTab: (data) => dispatch(changeTab(data)),\n            changeTabOnStart: (data) => dispatch(changeTabOnStart(data)),\n        }\n    }\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar)","\n\nexport const changeTab = (tab) => {\n  return (dispatch) => {\n\n      dispatch({\n          type: 'CHANGE_TAB',\n          data: tab\n    })\n  }\n}\n\n\nexport const changeTabOnStart = (tab) => {\n  return (dispatch) => {\n\n      dispatch({\n          type: 'CHANGE_TAB',\n          data: tab\n    })\n  }\n}\n\n\n\n\n\n\n\n    \n","import { Table, Input, Button, Tooltip} from 'antd';\nimport React, {Component} from 'react';\nimport Highlighter from 'react-highlight-words';\nimport { connect } from 'react-redux'\nimport moment from 'moment';\nimport Icon, { PlusCircleOutlined ,SearchOutlined, HistoryOutlined, FileSyncOutlined } from '@ant-design/icons'\n\n\nclass DailyReportTable extends Component {\n\n\n  constructor(props){\n      super(props)\n\n      this.state = {\n        searchText: '',\n        searchedColumn: '',\n        rowId:'',\n      }\n\n\n  }\n\n  \n    componentDidUpdate(prevProps, prevState, snapshot){\n\n  }\n\n\n\n\n\n\n  getColumnSearchProps = dataIndex => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={node => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\n        />\n        <Button\n          type=\"primary\"\n          onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          icon=\"Search\"\n          size=\"small\"\n          style={{ width: 90, marginRight: 8 }}\n        />\n        <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n          Reset\n        </Button>\n      </div>\n    ),\n    filterIcon: filtered => (\n      <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        .toString()\n        .toLowerCase()\n        .includes(value.toLowerCase()),\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: text =>\n      this.state.searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n          searchWords={[this.state.searchText]}\n          autoEscape\n          textToHighlight={text.toString()}\n        />\n      ) : (\n        text\n      ),\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = clearFilters => {\n    clearFilters();\n    this.setState({ searchText: '' });\n  };\n\n \n\n  render() {\n\n    const columns = [\n      {\n        title: 'Date',\n        dataIndex: 'Date',\n        key: 'Date',\n        // width: '20%',\n        sorter: {\n          compare: (a, b) => moment(a['Date']).unix() - moment(b['Date']).unix(),\n          multiple: 0,\n        },\n        ...this.getColumnSearchProps('Date'),\n      },\n      {\n        title: 'Name',\n        dataIndex: 'Name',\n        key: 'Name',\n        sorter: {\n          compare: (a, b) => a.Name.localeCompare(b.Name),\n          multiple: 1,\n        },\n        ...this.getColumnSearchProps('Name'),\n      },\n      {\n        title: 'Species',\n        dataIndex: 'Species',\n        key: 'Species',\n        sorter: {\n          compare: (a, b) => a.Species.localeCompare(b.Species),\n          multiple: 2,\n        },\n        ...this.getColumnSearchProps('PRIMARYPRODUCTLINE'),\n      },\n      {\n        title: 'Primary Breed',\n        dataIndex: 'Breed',\n        key: 'Breed',\n        sorter: {\n          compare: (a, b) => a.Breed.localeCompare(b.Breed),\n          multiple: 3,\n        },\n        ...this.getColumnSearchProps('Breed'),\n      },\n      {\n        title: 'Age',\n        dataIndex: 'Age',\n        key: 'Age',\n        sorter: {\n          compare: (a, b) => a.Age - b.Age,\n          multiple: 4,\n        },\n        ...this.getColumnSearchProps('Age'),\n      },\n      {\n        title: 'Sex',\n        dataIndex: 'Sex',\n        key: 'Sex',\n        sorter: {\n          compare: (a, b) => a.Sex.localeCompare(b.Sex),\n          multiple: 5,\n        },\n        ...this.getColumnSearchProps('Sex'),\n      },\n      {\n        title: 'Outcome Type',\n        dataIndex: 'OutcomeType',\n        key: 'OutcomeType',\n        sorter: {\n          compare: (a, b) => a.Status.localeCompare(b.OutcomeType),\n          multiple: 6,\n        },\n        ...this.getColumnSearchProps('OutcomeType'),\n      },\n      {\n        title: 'Outcome',\n        dataIndex: 'Outcome',\n        key: 'Outcome',\n        sorter: {\n          compare: (a, b) => a.Status.localeCompare(b.OUTCOME),\n          multiple: 7,\n        },\n        ...this.getColumnSearchProps('Outcome'),\n      },\n    ];\n\n\n    return (\n    <div style = {{width:'100%',height:'100%'}}>\n      \n      <Table \n        columns={columns} \n        dataSource={this.props.data} \n        pagination = {{pageSize:9}} \n        // rowSelection={rowSelection}\n        height = {'100vh'} \n        loading = {this.props.loading}\n        />\n\n    </div>\n    \n    \n    )\n    \n    \n  }\n\n\n}\n\nconst mapStateToProps = (state) => {\n  return{\n\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n      return{\n      }\n  }\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DailyReportTable)","import React, { useState, useEffect } from 'react';\nimport { DatePicker, TimePicker, Select, Space,Col, Row } from 'antd';\nimport { connect } from 'react-redux';\n\nconst { RangePicker } = DatePicker;\n\nconst { Option } = Select;\n\nconst monthFormat = 'YYYY-MM-DD';\n\nfunction PickerWithType({  onChange,props }) {\n\n//   if (type === 'day')\n   return <RangePicker allowClear={false} defaultValue={[props.dates[0],props.dates[1]]} format = {monthFormat} onChange={onChange} />;\n//   return <RangePicker defaultValue={[props.dates[0][0],props.dates[0][1]]} format={monthFormat} picker={type} onChange={onChange} />;\n}\n\nconst DateTypeSelector = (props) => {\n\n  return (\n      <Row>\n\n      <PickerWithType props = {props}  onChange={value => props.onDateChange(value)} />\n      </Row>\n  \n         \n  );\n}\n\n\n\nconst mapStateToProps = (state) => {\n    return{\n        dates:state.customeraudit.dates,\n\n    }\n  }\n  \n  const mapDispatchToProps = (dispatch) => {\n        return{\n          \n        }\n    }\n  \n  \n  \n  export default connect(mapStateToProps, mapDispatchToProps)(DateTypeSelector)\n\n\n\n\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\n\r\n\r\n\r\n\r\nconst DailyReportBarChart = (props) => {\r\n\r\n\r\n    useEffect(() => {\r\n    \r\n    \r\n    }, []);\r\n  \r\n\r\n\r\n    return (\r\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n        <BarChart\r\n          width={500}\r\n          height={300}\r\n          data={props.data}\r\n          margin={{\r\n            top: 20,\r\n            right: 30,\r\n            left: 0,\r\n            bottom: 5,\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"Date\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Bar dataKey=\"Dog\" stackId=\"a\" fill=\"#9EDAD1\" />\r\n          <Bar dataKey=\"Cat\" stackId=\"a\" fill=\"#F69382\" />\r\n          <Bar dataKey=\"Rabbit\" stackId=\"a\" fill=\"#E8C1A0\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  \r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n  \r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n  \r\n    };\r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(DailyReportBarChart);  \r\n  \r\n","import React, {Component} from 'react';\nimport { connect } from 'react-redux'\nimport { Breadcrumb, Drawer, Button, Modal, DatePicker, Card, Spin } from 'antd';\nimport { Row, Col } from 'antd';\nimport \"./CustomerAudit.css\";\nimport { Link } from 'react-router-dom';\nimport { clearData, handleApplyFilter, onDateChange, getDailyReportTable,getDailyReportBarChart} from '../../store/actions/customerAuditActions.js'\nimport { SettingOutlined, FileAddOutlined } from '@ant-design/icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCat, faDog, faHome} from  '@fortawesome/free-solid-svg-icons'\nimport moment from 'moment';\nimport axios from 'axios';\nimport XLSX from 'xlsx';\nimport NotificationBell from '../../components/Dashboards/notificationBell';\nimport DailyReportTable from '../../components/CustomerAudit/dailyReportTable';\nimport DateTypeSelector from '../../components/CustomerAudit/dateTypeSelector';\nimport DailyReportBarChart from '../../components/CustomerAudit/dailyReportBarchart';\n\n\n\n\n\nclass CustomerAudit extends Component {\n\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n            visible: false,\n            dates: [moment().add('month', -1),moment().add('day', -1)],\n            changes:false,\n            loadingModal:false,\n        }\n\n        this.handleFilterApply = this.handleFilterApply.bind(this)\n        this.onDateChange = this.onDateChange.bind(this)\n\n\n    }\n\n\n    componentDidMount(){\n      this.props.getDailyReportTable(this.props.dates)\n      this.props.getDailyReportBarChart(this.props.dates)\n\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot){\n      if (prevProps.dates !== this.props.dates) {\n        this.props.clearData()\n        this.props.getDailyReportTable(this.props.dates)\n        this.props.getDailyReportBarChart(this.props.dates)\n      }\n\n  }\n\n  sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n  handleFilterApply(){\n    let apply  = async() =>{\n      this.setState({\n        changes: false,\n        });\n\n\n      this.props.onDateChange(this.state.dates)\n\n      await this.sleep(1000)\n\n      return 0\n    }\n\n    apply().then(() =>{\n      this.props.handleApplyFilter();\n    })\n  }\n\n\n\n  loadingCheck(val){\n      if(this.props[val]){\n          return false\n      }else{\n          return false\n        }\n\n  }\n  \n  thousands_separators(num){\n    if(num){\n      var num_parts = num.toString().split(\".\");\n      num_parts[0] = num_parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      return num_parts.join(\".\");\n    }else{\n        return 0\n    }\n  }\n\n  showDrawer = () => {\n    this.setState({\n    visible: true,\n    });\n};\n\ntoggleDrawer = () => {\n    this.setState(prevState => ({\n    visible: !prevState.visible\n    }));\n}\n\nonClose = () => {\n    this.setState({\n    visible: false,\n    });\n};\n\n\nonDateChange = (moment) => {\n\n  this.setState({\n    changes: true,\n    dates: moment,\n    });\n    \n  };\n\n  showLoadingModal = () => {\n    this.setState({\n        loadingModal: true,\n      });\n  };\n\n  handleLoadingOk = () => {\n      this.setState({\n          loadingModal: false,\n      });\n  };\n\n  handleLoadingCancel = () => {\n      this.setState({\n          loadingModal: false,\n      });\n  };\n\n  downloadSIS = () => {\n    // this.showLoadingModal()\n\n    // axios.post('/customerAudit/getSISExcel', {\n    //   dates: this.props.dates\n    //       })\n    // .then((res) =>{\n      if(this.props.dailyReportTable){\n          var SISWS =  XLSX.utils.json_to_sheet(this.props.dailyReportTable);\n          var wb = XLSX.utils.book_new();\n\n          XLSX.utils.book_append_sheet(wb, SISWS, 'Daily Report');\n\n          var wopts = {type:'buffer',bookType: 'xlsx', bookSST: true, compression:true};\n\n          XLSX.writeFile(wb, 'Daily Report.xlsx', wopts);\n      }\n    // this.handleLoadingOk()\n\n    //   })\n    }\n\n\n    getItems(input) {\n      if(input){\n      var arr = input, obj = {};\n      for (var i = 0; i < arr.length; i++) {\n        if (!obj[arr[i].OutcomeType]) {\n          obj[arr[i].OutcomeType] = 1;\n        } else if (obj[arr[i].OutcomeType]) {\n          obj[arr[i].OutcomeType] += 1;\n        }\n      }\n      return obj;\n      }else{\n          return {}\n      }\n      \n    }\n\n\n\n    render(){\n\n\n      var tileData = this.getItems(this.props.dailyReportTable)\n\n\n        return (\n            <div>\n                <Drawer\n                title=\"ShelterLuv\"\n                placement=\"right\"\n                closable={true}\n                onClose={this.onClose}\n                visible={this.state.visible}\n                width= {300}\n                getContainer={false}\n                style={{ position: 'fixed' }}\n                mask={false}\n                >\n                  <p>Select Date Range: <DateTypeSelector onDateChange={this.onDateChange} onChangeType={this.onChangeType}/></p>\n                  \n                  <Button style = {{marginTop:10, float:'left'}} type=\"primary\" disabled = {!this.state.changes} onClick = {this.handleFilterApply}>Apply Changes</Button>\n                </Drawer>\n\n                <Modal title=\"Fetching Data\" visible={this.state.loadingModal} onOk={this.handleLoadingOk} onCancel={this.handleLoadingCancel} footer = {false} style = {{marginTop:150}} width= '500px' bodyStyle= {{height:200}}>\n                  <div style = {{textAlign:'center', marginTop:50}}>\n                      <Spin />\n                  </div>\n                </Modal>\n\n            <div >\n                <Row>\n                  <Col span={12}>\n                    <Breadcrumb style={{ margin: \"12px 0 0 0\" }}>\n                      <Breadcrumb.Item><Link to =\"/\">Dashboards</Link></Breadcrumb.Item>\n                      <Breadcrumb.Item  onClick = {() =>{}}><a href='#/shelterluv' >ShetlerLuv</a></Breadcrumb.Item>\n                    </Breadcrumb>\n                  </Col>\n                  <Col span = {12} style = {{paddingRight:8, paddingTop: 15}}>\n                        <div style = {{float:'right', marginLeft:8, paddingTop:3}}>\n                            <SettingOutlined className = 'settingsIcon' style = {{float:'right'}} size='large' onClick={this.toggleDrawer} />\n                        </div>\n                        {/* <div>\n                          <NotificationBell/>\n                        </div> */}\n                        <div style = {{float:'right', marginLeft:10, paddingTop:3}}>\n                            <FileAddOutlined className = 'settingsIcon' style = {{float:'right'}} size='large' onClick={this.downloadSIS} />\n                        </div>\n                        <div style = {{float:'right', width:400}}>\n                          {/* <LAMSearcher data = {this.props.taskNames} value = {this.props.taskNameSelected} changeExtractSelected = {this.props.changeTaskNameSelected}/> */}\n                        </div>\n                  </Col>\n                </Row>\n                <Row style = {{marginTop:8}}>\n                  <Col span = {24}>\n                      <Row>\n                        <Col span = {8}>\n                          <Card style={{ height: 170, margin: \"0 12px 0 0\", padding:\"20px 0 0 0px\" }} loading ={this.loadingCheck('')}>\n                              <Row>                            \n                                <Col span = {10}>\n                                  <div className ='ca-card-icon'><FontAwesomeIcon icon={faDog} size=\"6x\" color={'#9EDAD1'} /></div>\n                                </Col>\n                                <Col span = {14}>\n                                  <h1 className = 'card-data' style = {{textAlign:\"center\", color:'#9EDAD1', paddingTop:6}}>{tileData ? tileData.Intake : 0}</h1>\n                                  <h3 className = \"card-titles\">Animals Intake</h3>\n                                </Col>\n                              </Row>\n                          </Card>\n                        </Col>\n                        <Col span = {8}>\n                          <Card style={{ height: 170, margin: \"0 12px 0 0\", padding:\"20px 0 0 0px\"   }} loading ={this.loadingCheck('')}>\n                              <Row>                            \n                                <Col span = {10}>\n                                  <div className ='ca-card-icon'><FontAwesomeIcon icon={faCat} size=\"6x\" color={'#F69382'} /></div>\n                                </Col>\n                                <Col span = {14}>\n                                  <h1 className = 'card-data' style = {{textAlign:\"center\", color:'#F69382', paddingTop:6}}>{tileData ? tileData.Outcome : 0}</h1>\n                                  <h3 className = \"card-titles\">Animals Outcome</h3>\n                                </Col>\n                              </Row>\n                          </Card>                        \n                        </Col>\n                        <Col span = {8}>\n                          <Card style={{ height: 170, margin: \"0 0 0 0\", padding:\"20px 0 0 0px\"   }} loading ={this.loadingCheck('')}>\n                                <Row>                            \n                                  <Col span = {10}>\n                                    <div className ='ca-card-icon'><FontAwesomeIcon icon={faHome} size=\"6x\" color={'#E8C1A0'} /></div>\n                                  </Col>\n                                  <Col span = {14}>\n                                    <h1 className = 'card-data' style = {{textAlign:\"center\", color:'#E8C1A0', paddingTop:6}}>{tileData ? tileData.Foster : 0}</h1>\n                                    <h3 className = \"card-titles\">Foster Status</h3>\n                                  </Col>\n                                </Row>\n                            </Card>\n                        </Col>\n                        <Col span = {9}>\n                          {/* <CustomerAuditSiloTable data = {this.props.customerAuditSiloTable} loading ={this.loadingCheck('customerAuditSiloTable')}/> */}\n                        </Col>\n                      </Row>\n                      <Row style = {{marginTop:12}}>\n                      <Col span = {24} style = {{height:200, background:'white'}}> \n                          <DailyReportBarChart data = {this.props.dailyReportBarChart}/>\n                      </Col>\n                    </Row>\n                      <Row style = {{marginTop:'16px'}}>\n                        <Col span = {24} >  \n                          <DailyReportTable data = {this.props.dailyReportTable} loading ={this.loadingCheck('dailyReportTable')}/>\n                        </Col>\n                      </Row>\n                    </Col>\n                </Row>\n                  \n                  \n\n              </div>\n            </div>\n\n    \n        )\n\n    }\n\n\n}\n\nconst mapStateToProps = (state) => {\n    return{\n      dates:state.customeraudit.dates,\n      dailyReportTable: state.customeraudit.dailyReportTable,\n      dailyReportBarChart: state.customeraudit.dailyReportBarChart\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n        return{\n            onDateChange: (moment) => dispatch(onDateChange(moment)),\n            clearData: (value) => dispatch(clearData(value)),\n            handleApplyFilter: () => dispatch(handleApplyFilter()),\n            getDailyReportTable: (dates) => dispatch(getDailyReportTable(dates)),\n            getDailyReportBarChart: (dates) => dispatch(getDailyReportBarChart(dates)),\n        }\n    }\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomerAudit)                    ","import axios from 'axios'\n\nexport const clearData = (value) => {\n  return (dispatch) => {\n\n\n        dispatch({\n          type: 'SL_CLEAR_DATA',\n          data: ''\n      })\n    \n  }\n}\n\nexport const onDateChange = (dates) => {\n  return (dispatch) => {\n\n\n        dispatch({\n            type: 'SL_ON_DATE_CHANGE',\n            data: dates\n        })\n\n  }\n}\n\n\nexport const handleApplyFilter = () => {\n  return (dispatch) => {\n \n\n        dispatch({\n            type: 'SL_HANDLE_APPLY_FILTER',\n            data: ''\n        })\n\n  }\n}\n\nexport const getDailyReportTable = (dates) => {\n  return (dispatch) => {\n\n    axios.post('/shelterluv/getDailyReportTable', {\n      dates:dates,\n    }).then(res => {\n\n\n        dispatch({\n            type: 'SL_GET_DAILY_REPORT_TABLE',\n            data: res.data\n        })\n    })\n  }\n}\n\nexport const getDailyReportBarChart = (dates) => {\n  return (dispatch) => {\n\n    axios.post('/shelterluv/getDailyReportBarChart', {\n      dates:dates,\n    }).then(res => {\n\n\n        dispatch({\n            type: 'SL_GET_DAILY_REPORT_BAR_CHART',\n            data: res.data\n        })\n    })\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n    \n","import React, {Component} from 'react';\nimport { HashRouter, Route, useHistory} from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { authProvider, checkGroup } from './authProvider';\nimport {authenticateUser, getAcceptedGroups, appLog } from './store/actions/AuthActions.js'\nimport { getDashboards,} from './store/actions/DashboardActions.js'\nimport { AzureAD, AuthenticationState } from 'react-aad-msal';\nimport 'antd/dist/antd.css';\nimport { Layout, Spin } from 'antd';\nimport \"./index.css\";\nimport Dashboards from './containers/Dashboards/Dashboards.js';\nimport { AnimatedSwitch } from 'react-router-transition';\nimport Sidebar from './containers/Sidebar/Sidebar';\nimport CustomerAudit from './containers/CustomerAudit/CustomerAudit';\n\n\n\n\n\n\nconst { Header, Content } = Layout;\n\n\n\nclass App extends Component {\n\n  constructor(props){\n    super(props)\n\n    this.state = {\n      \n    };\n\n}\n\ncomponentDidMount(){\n\n  this.props.getAcceptedGroups()\n\n}\n\ncomponentDidUpdate(prevProps, prevState, snapshot){\n      if (prevProps.acceptedGroups !== this.props.acceptedGroups) {\n        this.props.appLog(authProvider.account.userName, 'login')\n        checkGroup(this, this.props.acceptedGroups)\n      }\n  \n\n}\n\n\n\n  \nrender(){\n\n\n    return (\n        <HashRouter onChange = {this.test} >\n\n        <div className = 'app-background' id ='App'>\n          \n\n          <AzureAD provider={authProvider} forceLogin={true}>\n\n          {\n            ({login, logout, authenticationState, error, accountInfo}) => {\n              console.log(accountInfo)\n              if(this.props.auth != null){\n\n                switch (authenticationState) {\n                  case AuthenticationState.Authenticated:\n\n                    return (\n                    <Layout style={{ minHeight: \"100vh\" }}>\n                      {this.props.isTeams ? <Sidebar user  = {accountInfo} logout = {logout}/> : \" \"}\n                      <Layout style={{  }}>\n                        {this.props.isTeams ? <Header className = 'header-main'>\n                          <h2 style = {{color:\"#F3F2F1\" ,fontSize:22}}>Animal Friends Volunteering</h2>\n                          </Header> : \" \"}\n                        <Content style={{ padding: \"0 16px\", position: 'relative', overflowY:'auto'}}>\n                            <AnimatedSwitch\n                              // atEnter={{ offset: -100 }}\n                              // atLeave={{ offset: 0 }}\n                              // atActive={{ offset: 0 }}\n                              // mapStyles={(styles) => ({\n                              //   transform: `translateX(${styles.offset}%)`,\n                              // })}\n                              atEnter={{ opacity: 0 }}\n                              atLeave={{ opacity: 0 }}\n                              atActive={{ opacity: 1 }}\n                              className=\"switch-wrapper\"\n                            >\n                              <Route exact path='/' component={Dashboards} />\n                              {this.props.acceptedDashboards.includes('shelterluv') ? <Route exact path='/shelterluv' component={CustomerAudit} /> : null}\n                              {/*teams routes*/}\n                              {/* {this.props.acceptedDashboards.includes('vendor') ? <Route exact path={`/teams/vendor`} component={Vendor}/> : null} */}\n                              <Route exact path={`/teams/`} component={Dashboards}/>\n\n                              \n                              {/* <Route component={ErrorPage}/> */}\n                            </AnimatedSwitch>\n                        </Content>\n                        \n                      </Layout>\n                    </Layout>\n                    );\n                    case AuthenticationState.Unauthenticated:\n                      return (<div><p>Authenticating...</p><p>Not working? Please click <button  onClick = {login}>here</button> </p></div>);\n                    case AuthenticationState.InProgress:\n                      return (<div><p>Authenticating...</p><p>Not working? Please click <button  onClick = {login}>here</button> </p></div>);\n                    default:\n                      return (<div style = {{textAlign:\"center\", marginTop:425}}><Spin size=\"large\" />\n                                <div>\n                                  <p>Authenticating...</p>\n                                  <p>Not working? Please click <button  onClick = {login}>here</button> </p>\n                                </div>\n                              </div>)\n\n                  }\n                }\n                else{\n                  return <div style = {{textAlign:\"center\", marginTop:425}}><Spin size=\"large\" />\n                        <div>\n                          <p>Authenticating...</p>\n                          <p>Not working? Please click <button  onClick = {login}>here</button> </p>\n                        </div>\n                      </div>\n                \n              }\n            }\n          }\n            </AzureAD>\n              \n        </div>\n      </HashRouter>\n\n    ); \n\n\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isTeams:state.auth.isTeams,\n    auth:state.auth.authGroups,\n    acceptedGroups:state.auth.acceptedGroups,\n    dashboards: state.dashboards.dashboards,\n    acceptedDashboards: state.dashboards.acceptedDashboards,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return{\n    authenticateUser: (value) => dispatch(authenticateUser(value)),\n    getAcceptedGroups: () => dispatch(getAcceptedGroups()),\n    getDashboards: (groups,query) => dispatch(getDashboards(groups, query)),\n    appLog: (user,type) => dispatch(appLog(user,type)),\n      \n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nconst initState = {\n    exampleUser: 'Testing@Mckesson.com',\n    name:'',\n    exampleData:'',\n    \n}\n\n\n\n\nconst exampleReducer = (state = initState, action) => {\n\n    console.log(action)\n\n    switch(action.type){\n        case 'UPDATE_DATA':\n                return Object.assign({}, state, {\n                    ...state,\n                    exampleData:action.data,\n\n                })\n        case 'UPDATE_EXAMPLE_NAME':\n            return Object.assign({}, state, {\n                ...state,\n                name:action.data,\n\n            })\n\n    default: return state\n\n    }\n\n}\n\nexport default exampleReducer","import moment, { isMoment } from 'moment';\nconst initState = {\n    dates: [moment().add('month', -1),moment().add('day', -1)],\n    applyFilter: true,\n    dailyReportTable:'',\n    dailyReportBarChart:'',\n}\n\n\n\n\nconst customerAuditReducer = (state = initState, action) => {\n\n    switch(action.type){\n        case 'SL_CLEAR_DATA':\n            return Object.assign({}, state, {\n                ...state,\n            })\n        case 'SL_GET_DAILY_REPORT_TABLE':\n            return Object.assign({}, state, {\n                ...state,\n                dailyReportTable:action.data,\n            })\n        case 'SL_GET_DAILY_REPORT_BAR_CHART':\n            return Object.assign({}, state, {\n                ...state,\n                dailyReportBarChart:action.data,\n            })\n        case 'SL_ON_DATE_CHANGE':\n            return Object.assign({}, state, {\n                ...state,\n                dates:action.data,\n            })\n    \n\n\n    default: return state\n\n    }\n\n}\n\nexport default customerAuditReducer","const initState = {\n    authGroups: null,\n    acceptedGroups: '',\n    user:'',\n    isTeams: ((((window.location.href).split('#').pop().substring(0,7)) == '/teams/') ? false:true)\n}\n\n\n\n\nconst authReducer = (state = initState, action) => {\n\n    switch(action.type){\n        case 'AUTH_USER':\n                return Object.assign({}, state, {\n                    ...state,\n                    authGroups:action.data,\n\n                })\n        case 'GET_ACCEPTED_GROUPS':\n            return Object.assign({}, state, {\n                ...state,\n                acceptedGroups:action.data,\n\n            })\n        case 'APP_LOG':\n            return Object.assign({}, state, {\n                ...state,\n                user:action.data,\n\n            })\n\n\n\n    default: return state\n\n    }\n\n}\n\nexport default authReducer","const initState = {\n    dashboards: null,\n    acceptedDashboards:[],\n    notifications:'',\n}\n\n\n\n\nconst dashboardReducer = (state = initState, action) => {\n\n    switch(action.type){\n        case 'GET_DASHBOARDS':\n                return Object.assign({}, state, {\n                    ...state,\n                    dashboards:action.data[0],\n                    acceptedDashboards:action.data[1]\n                })\n        case 'GET_NOTIFICATIONS':\n            return Object.assign({}, state, {\n                ...state,\n                notifications:action.data,\n            })\n        case 'SET_NOTIFICATIONS':\n            return Object.assign({}, state, {\n                ...state,\n                notifications:action.data,\n            })\n        case 'DISMISS_ALL_NOTIFICATIONS':\n            return Object.assign({}, state, {\n                ...state,\n                notifications:'',\n            })\n\n            \n\n\n\n    default: return state\n\n    }\n\n}\n\nexport default dashboardReducer","\nimport {combineReducers} from 'redux'\nimport exampleReducer from './exampleReducer'\nimport customerAuditReducer from './customerAuditReducer'\nimport authReducer from './authReducer'\nimport dashboardReducer from './dashboardReducer'\n\n\nconst appReducer = combineReducers({\n    exampleReducer: exampleReducer,\n    auth: authReducer,\n    dashboards: dashboardReducer,\n    customeraudit:customerAuditReducer,\n })\n \n  const rootReducer = (state, action) => {\n   return appReducer(state, action)\n }\n\n export default rootReducer;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport rootReducer from './store/reducers/rootReducer.js'\nimport ReduxThunk from 'redux-thunk'\n\n//redux thunk is middleware\n\nconst store = createStore(rootReducer, applyMiddleware(ReduxThunk))\n\nReactDOM.render(\n<Provider store = {store}>\n    \n    <App />\n\n</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}